"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7108],{7108:(e,r,t)=>{t.r(r),t.d(r,{default:()=>V});var i=t(81856),s=t(39166),a=t(32391),l=t(43650),o=t(21892),n=t(92753),y=t(91838),p=t(86942);t(57845),t(33638);var h=t(53480),u=t(12709),m=t(7780),d=t(44151),c=t(61414),g=t(70429),f=t(71760),b=t(64171),v=t(14925),S=t(2411),_=t(81877),x=t(24743),M=t(60349),I=t(2043),Z=t(54882),L=t(6255),O=t(23281),w=t(92884),P=t(70442),E=t(76572),T=t(37779),F=t(72875),N=t(83583),A=t(85312),D=t(63145),J=t(47840),R=t(90628);let j=class extends(0,x.dM)((0,P.e)((0,O.j)((0,w.I)((0,S.V)((0,_.b)((0,I.q)((0,Z.A)((0,o.P)((0,L.J)((0,v.p)((0,M.d)(b.A)))))))))))){constructor(...e){super(...e),this._exportImageParameters=new T.g({layer:this}),this.dateFieldsTimeZone=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeZone=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){let r=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(n.QP).then(()=>this._fetchService(r))),Promise.resolve(this)}destroy(){this._exportImageParameters.destroy()}readImageFormat(e,r){let t=r.supportedImageFormatTypes;return t&&t.includes("PNG32")?"png32":"png24"}writeSublayers(e,r,t,i){if(!this.loaded||!e)return;let s=e.slice().reverse().flatten(({sublayers:e})=>e&&e.toArray().reverse()).toArray(),a=!1,l=(0,d.aB)(i.origin);if(this.capabilities?.operations.supportsExportMap&&this.capabilities?.exportMap?.supportsDynamicLayers){if(l===d.Gr.PORTAL_ITEM){let e=this.createSublayersForOrigin("service").sublayers;a=(0,A.Zx)(s,e,d.Gr.SERVICE)}else if(l>d.Gr.PORTAL_ITEM){let e=this.createSublayersForOrigin("portal-item");a=(0,A.Zx)(s,e.sublayers,(0,d.aB)(e.origin))}}let o=[],n={writeSublayerStructure:a,...i},y=a||this.hasVisibleLayersForOrigin(l);s.forEach(e=>{let r=e.write({},n);o.push(r),y=y||"user"===e.originOf("visible")}),o.some(e=>Object.keys(e).length>1)&&(r.layers=o),y&&(r.visibleLayers=s.filter(e=>e.visible).map(e=>e.id))}createExportImageParameters(e,r,t,i){let s=i?.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian()),this._exportImageParameters.floors=i?.floors??null,this._exportImageParameters.scale=(0,g.X_)({extent:e,width:r})*s;let a=this._exportImageParameters.toJSON(),l=!i?.rotation||this.version<10.3?{}:{rotation:-i.rotation},o=e?.spatialReference,n=(0,f.YX)(o);a.dpi*=s;let y={};if(i?.timeExtent){let{start:e,end:r}=i.timeExtent.toJSON();y.time=e&&r&&e===r?""+e:`${e??"null"},${r??"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(y.time="null,null");return{bbox:e?e.xmin+","+e.ymin+","+e.xmax+","+e.ymax:void 0,bboxSR:n,imageSR:n,size:r+","+t,...a,...l,...y}}async fetchImage(e,r,t,i){let{data:s}=await this._fetchImage("image",e,r,t,i);return s}async fetchImageBitmap(e,r,t,i){let{data:s,url:a}=await this._fetchImage("blob",e,r,t,i);return(0,F.m)(s,a,i?.signal)}async fetchRecomputedExtents(e={}){let r={...e,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:t}=await (0,s.A)(this.url,r),{extent:i,fullExtent:a,timeExtent:l}=t,o=i||a;return{fullExtent:o&&c.A.fromJSON(o),timeExtent:l&&J.A.fromJSON({start:l[0],end:l[1]})}}loadAll(){return(0,l.g)(this,e=>{e(this.allSublayers),e(this.subtables)})}serviceSupportsSpatialReference(e){return(0,D.D)(this,e)}async _fetchImage(e,r,t,i,l){let o={responseType:e,signal:l?.signal??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(r,t,i,l),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},y=this.parsedUrl.path+"/export";if(null!=o.query?.dynamicLayers&&!this.capabilities?.exportMap?.supportsDynamicLayers)throw new a.A("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:o.query});try{let{data:e}=await (0,s.A)(y,o);return{data:e,url:y}}catch(e){if((0,n.zf)(e))throw e;throw new a.A("mapimagelayer:image-fetch-error",`Unable to load image: ${y}`,{error:e})}}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});let{data:r,ssl:t}=await (0,s.A)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});t&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r,this.read(r,{origin:"service",url:this.parsedUrl})}hasVisibleLayersForOrigin(e){return!(null==e||!this.sublayersSourceJSON[e]?.visibleLayers)}};(0,i._)([(0,y.MZ)((0,R.P6)("dateFieldsTimeReference"))],j.prototype,"dateFieldsTimeZone",void 0),(0,i._)([(0,y.MZ)({type:Boolean})],j.prototype,"datesInUnknownTimezone",void 0),(0,i._)([(0,y.MZ)()],j.prototype,"dpi",void 0),(0,i._)([(0,y.MZ)()],j.prototype,"gdbVersion",void 0),(0,i._)([(0,y.MZ)()],j.prototype,"imageFormat",void 0),(0,i._)([(0,h.w)("imageFormat",["supportedImageFormatTypes"])],j.prototype,"readImageFormat",null),(0,i._)([(0,y.MZ)({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],j.prototype,"imageMaxHeight",void 0),(0,i._)([(0,y.MZ)({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],j.prototype,"imageMaxWidth",void 0),(0,i._)([(0,y.MZ)()],j.prototype,"imageTransparency",void 0),(0,i._)([(0,y.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],j.prototype,"isReference",void 0),(0,i._)([(0,y.MZ)({json:{read:!1,write:!1}})],j.prototype,"labelsVisible",void 0),(0,i._)([(0,y.MZ)({type:["ArcGISMapServiceLayer"]})],j.prototype,"operationalLayerType",void 0),(0,i._)([(0,y.MZ)({json:{read:!1,write:!1}})],j.prototype,"popupEnabled",void 0),(0,i._)([(0,y.MZ)((0,R.P6)("preferredTimeReference"))],j.prototype,"preferredTimeZone",void 0),(0,i._)([(0,y.MZ)()],j.prototype,"sourceJSON",void 0),(0,i._)([(0,y.MZ)({json:{write:{ignoreOrigin:!0}}})],j.prototype,"sublayers",void 0),(0,i._)([(0,m.K)("sublayers",{layers:{type:[N.A]},visibleLayers:{type:[p.jz]}})],j.prototype,"writeSublayers",null),(0,i._)([(0,y.MZ)({type:["show","hide","hide-children"]})],j.prototype,"listMode",void 0),(0,i._)([(0,y.MZ)({json:{read:!1},readOnly:!0,value:"map-image"})],j.prototype,"type",void 0),(0,i._)([(0,y.MZ)(E.OZ)],j.prototype,"url",void 0);let V=j=(0,i._)([(0,u.$)("esri.layers.MapImageLayer")],j)},37779:(e,r,t)=>{t.d(r,{g:()=>u});var i=t(81856),s=t(28690),a=t(97409),l=t(91838);t(57845),t(61939),t(33638);var o=t(12709),n=t(70429),y=t(98569),p=t(85312);let h={visible:"visibleSublayers",definitionExpression:"layerDefs",labelingInfo:"hasDynamicLayers",labelsVisible:"hasDynamicLayers",opacity:"hasDynamicLayers",minScale:"visibleSublayers",maxScale:"visibleSublayers",renderer:"hasDynamicLayers",source:"hasDynamicLayers"},u=class extends s.A{constructor(e){super(e),this.floors=null,this.scale=0}destroy(){this.layer=null}get dynamicLayers(){if(!this.hasDynamicLayers)return null;let e=this.visibleSublayers.map(e=>{let r=(0,y.f)(this.floors,e);return e.toExportImageJSON(r)});return e.length?JSON.stringify(e):null}get hasDynamicLayers(){return this.layer&&(0,p.Sk)(this.visibleSublayers,this.layer.serviceSublayers,this.layer.gdbVersion)}set layer(e){this._get("layer")!==e&&(this._set("layer",e),this.removeHandles("layer"),e&&this.addHandles([e.allSublayers.on("change",()=>this.notifyChange("visibleSublayers")),e.on("sublayer-update",e=>this.notifyChange(h[e.propertyName]))],"layer"))}get layers(){let e=this.visibleSublayers;return e?e.length?"show:"+e.map(e=>e.id).join(","):"show:-1":null}get layerDefs(){let e=!!this.floors?.length,r=this.visibleSublayers.filter(r=>null!=r.definitionExpression||e&&null!=r.floorInfo);return r.length?JSON.stringify(r.reduce((e,r)=>{let t=(0,y.f)(this.floors,r),i=(0,a.mA)(t,r.definitionExpression);return null!=i&&(e[r.id]=i),e},{})):null}get version(){this.commitProperty("layers"),this.commitProperty("layerDefs"),this.commitProperty("dynamicLayers");let e=this.layer;return e&&(e.commitProperty("dpi"),e.commitProperty("imageFormat"),e.commitProperty("imageTransparency"),e.commitProperty("gdbVersion")),(this._get("version")||0)+1}get visibleSublayers(){let e=[];if(!this.layer)return e;let r=this.layer.sublayers,t=this.scale,i=r=>{r.visible&&(0===t||(0,n.zx)(t,r.minScale,r.maxScale))&&(r.sublayers?r.sublayers.forEach(i):e.unshift(r))};r&&r.forEach(i);let s=this._get("visibleSublayers");return!s||s.length!==e.length||s.some((r,t)=>e[t]!==r)?e:s}toJSON(){let e=this.layer,r={dpi:e.dpi,format:e.imageFormat,transparent:e.imageTransparency,gdbVersion:e.gdbVersion||null};return this.hasDynamicLayers&&this.dynamicLayers?r.dynamicLayers=this.dynamicLayers:r={...r,layers:this.layers,layerDefs:this.layerDefs},r}};(0,i._)([(0,l.MZ)({readOnly:!0})],u.prototype,"dynamicLayers",null),(0,i._)([(0,l.MZ)()],u.prototype,"floors",void 0),(0,i._)([(0,l.MZ)({readOnly:!0})],u.prototype,"hasDynamicLayers",null),(0,i._)([(0,l.MZ)()],u.prototype,"layer",null),(0,i._)([(0,l.MZ)({readOnly:!0})],u.prototype,"layers",null),(0,i._)([(0,l.MZ)({readOnly:!0})],u.prototype,"layerDefs",null),(0,i._)([(0,l.MZ)({type:Number})],u.prototype,"scale",void 0),(0,i._)([(0,l.MZ)({readOnly:!0})],u.prototype,"version",null),(0,i._)([(0,l.MZ)({readOnly:!0})],u.prototype,"visibleSublayers",null),u=(0,i._)([(0,o.$)("esri.layers.support.ExportImageParameters")],u)},98569:(e,r,t)=>{function i(e){let r=e.layer;return"floorInfo"in r&&r.floorInfo?.floorField&&"floors"in e.view?a(e.view.floors,r.floorInfo.floorField):null}function s(e,r){return"floorInfo"in r&&r.floorInfo?.floorField?a(e,r.floorInfo.floorField):null}function a(e,r){if(!e?.length)return null;let t=e.filter(e=>""!==e).map(e=>`'${e}'`);return t.push("''"),`${r} IN (${t.join(",")}) OR ${r} IS NULL`}t.d(r,{E:()=>i,f:()=>s})}}]);