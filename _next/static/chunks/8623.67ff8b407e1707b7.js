"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8623],{35237:(e,t,i)=>{i.d(t,{A:()=>s});var h=i(47507),r=i(56121);class s{constructor(){this._resourceMap=new Map,this._inFlightResourceMap=new Map,this.geometryEngine=null,this.geometryEnginePromise=null}destroy(){this._inFlightResourceMap.clear(),this._resourceMap.clear()}getResource(e){return this._resourceMap.get(e)??null}async fetchResource(e,t){let i=this._resourceMap.get(e);if(i)return{width:i.width,height:i.height};let h=this._inFlightResourceMap.get(e);return h?h.then(e=>({width:e.width,height:e.height})):(h=(0,r.M5)(e,t),this._inFlightResourceMap.set(e,h),h.then(t=>(this._inFlightResourceMap.delete(e),this._resourceMap.set(e,t),{width:t.width,height:t.height}),()=>({width:0,height:0})))}deleteResource(e){this._inFlightResourceMap.delete(e),this._resourceMap.delete(e)}loadFont(e){return(0,h.Al)(e)}}},48623:(e,t,i)=>{i.r(t),i.d(t,{CIMSymbolRasterizer:()=>o});var h=i(35237),r=i(75061),s=i(5886),a=i(89063),n=i(66544),l=i(95832);let g=96/72;class o{constructor(e){this._spatialReference=e,this._imageDataCanvas=null,this._cimResourceManager=new h.A}get _canvas(){return this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas")),this._imageDataCanvas}get resourceManager(){return this._cimResourceManager}async rasterizeCIMSymbolAsync(e,t,i,h,r,g,o,d,y,u){if(!e)return null;let{data:m}=e;if(!m||"CIMSymbolReference"!==m.type||!m.symbol)return null;let{symbol:w}=m;g||(g=(0,l.n5)(w));let p=await a.OverrideHelper.resolveSymbolOverrides(m,t,this._spatialReference,r,g,o,d),x=this._cimResourceManager,M=[];s.wp.fetchResources(p,x,M),s.wp.fetchFonts(p,x,M),M.length>0&&await Promise.all(M);let{width:_,height:R}=i,f=c(g,_,R,h,u),b=s.wp.getEnvelope(p,f,x);if(!b)return null;b.x===1/0&&(b.x=_+2),b.y===1/0&&(b.y=-R/2),b.width===-1/0&&(b.width=_),b.height===-1/0&&(b.height=R);let C=1,v=0,I=0;switch(w.type){case"CIMPointSymbol":case"CIMTextSymbol":{let e=1;b.width>_&&(e=_/b.width);let t=1;b.height>R&&(t=R/b.height),"preview"===h&&(b.width<_&&(e=_/b.width),b.height<R&&(t=R/b.height)),C=Math.min(e,t),v=b.x+b.width/2,I=b.y+b.height/2}break;case"CIMLineSymbol":if(u){I=b.y+b.height/2,v=b.x+b.width/2;let e=b.width-_,t=b.height-R;f={paths:(0,n.hs)(f.paths,{xmin:-1*b.width/2+e,xmax:b.width/2-e,ymin:-1*b.height/2+t,ymax:b.height/2-t,width:b.width-2*e,height:b.height-2*t})}}else{(y||b.height>R)&&(C=R/b.height),I=b.y+b.height/2;let e=b.x*C+_/2,t=(b.x+b.width)*C+_/2,{paths:i}=f;i[0][0][0]-=e/C,i[0][2][0]-=(t-_)/C}break;case"CIMPolygonSymbol":if(u){I=b.y+b.height/2,v=b.x+b.width/2;let e=b.width-_,t=b.height-R;f={paths:(0,n.hs)(f.rings,{xmin:-1*b.width/2+e,xmax:b.width/2-e,ymin:-1*b.height/2+t,ymax:b.height/2-t,width:b.width-2*e,height:b.height-2*t})}}else{v=b.x+b.width/2,I=b.y+b.height/2;let e=b.x*C+_/2,t=(b.x+b.width)*C+_/2,i=b.y*C+R/2,h=(b.y+b.height)*C+R/2,{rings:r}=f;e<0&&(r[0][0][0]-=e,r[0][3][0]-=e,r[0][4][0]-=e),i<0&&(r[0][0][1]+=i,r[0][1][1]+=i,r[0][4][1]+=i),t>_&&(r[0][1][0]-=t-_,r[0][2][0]-=t-_),h>R&&(r[0][2][1]+=h-R,r[0][3][1]+=h-R)}}return this.rasterize({type:"cim",data:{type:"CIMSymbolReference",symbol:p}},_,R,v,I,C,g,1,f)}rasterize(e,t,i,h,s,a,n,o=0,d=null,y=window.devicePixelRatio||1){let{data:u}=e;if(!u||"CIMSymbolReference"!==u.type||!u.symbol)return null;let{symbol:m}=u,w=this._canvas,p=y*g;w.width=t*p,w.height=i*p,n||(n=(0,l.n5)(m)),d||(d=c(n,t,i,"legend")),w.width+=2*o,w.height+=2*o;let x=w.getContext("2d",{willReadFrequently:!0}),M=r.IT.createIdentity();return M.translate(-h,-s),M.scale(a*p,-a*p),M.translate(t*p/2+o,i*p/2+o),x.clearRect(0,0,w.width,w.height),new r.Rj(x,this._cimResourceManager,M,!0).drawSymbol(m,d),x.getImageData(0,0,w.width,w.height)}}function c(e,t,i,h,r){let s=-t/2+1,a=t/2-1,l=i/2-1,g=-i/2+1;if(r&&("esriGeometryPolygon"===e||"esriGeometryPolyline"===e)){let h="esriGeometryPolygon"===e?{rings:(0,n.Tl)((0,n.hs)(r.rings,{xmin:0,ymin:0,xmax:t,ymax:i,width:t,height:i}),-1*t/2,-1*i/2)}:"esriGeometryPolyline"===e?{paths:(0,n.Tl)((0,n.hs)(r.paths,{xmin:0,ymin:0,xmax:t,ymax:i,width:t,height:i}),-1*t/2,-1*i/2)}:null;if(h)return h}switch(e){case"esriGeometryPoint":return{x:0,y:0};case"esriGeometryPolyline":return{paths:[[[s,0],[0,0],[a,0]]]};default:return"legend"===h?{rings:[[[s,l],[a,0],[a,g],[s,g],[s,l]]]}:{rings:[[[s,l],[a,l],[a,g],[s,g],[s,l]]]}}}}}]);