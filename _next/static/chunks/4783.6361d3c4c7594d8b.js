"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4783],{44783:(e,t,s)=>{s.d(t,{uploadAssets:()=>N});var r=s(39166),o=s(57845),a=s(61939),n=s(92753),i=s(63430),l=s(90525),u=s(11568),p=s(91463),c=s(50046),d=s(89587);let f={uploadAssetBlobs:{prepareAssetItems:.9,uploadAssetItems:.1},uploadConvertibleSource:{uploadEditSource:.5,serviceAssetsToGlb:.5},uploadLocalMesh:{meshToAssetBlob:.5,uploadAssetBlobs:.5}};var m=s(21371),g=s(19158),h=s(90304);function y(e,t=e=>{},s){return new w(e,t,s)}class w{constructor(e,t=e=>{},s){if(this.onProgress=t,this.taskName=s,this._progressMap=new Map,this._startTime=void 0,this._timingsMap=new Map,"number"==typeof e){this._weights={};for(let t=0;t<e;t++){let s=t,r=1/e;this._weights[s]=r,this._progressMap.set(s,0)}}else this._weights=e;this.emitProgress()}emitProgress(){let e=0;for(let[t,s]of this._progressMap.entries())e+=s*this._weights[t];if(1===e&&(0,o.A)("enable-feature:esri-3dofl-upload-timings")){let e=Math.round(performance.now()-(this._startTime??0))/1e3;for(let[t,s]of(console.log(`${this.taskName} done in ${e} sec`),this._timingsMap)){let r=Math.round(s.end-s.start)/1e3,o=Math.round(r/e*100);console.log(this.taskName??"Task",{stepKey:t,stepTime:r,relativeTime:o})}}this.onProgress(e)}setProgress(e,t){if(this._progressMap.set(e,t),(0,o.A)("enable-feature:esri-3dofl-upload-timings")){let s=performance.now();this._startTime??=s;let r=(0,h.tE)(this._timingsMap,e,()=>({start:s,end:0}));1===t&&(r.end=s)}this.emitProgress()}simulate(e,t){return A(t=>this.setProgress(e,t),t)}makeOnProgress(e){return t=>this.setProgress(e,t)}}function A(e=e=>{},t=b){let s=performance.now();e(0);let r=setInterval(()=>{e(1-Math.exp(-(performance.now()-s)/t))},T);return(0,g.hA)(()=>{clearInterval(r),e(1)})}let T=(0,i.l5)(50),b=(0,i.l5)(1e3);async function P({data:e,name:t,description:s},o,a){let u=null;try{let p=(0,l.fj)(o,"uploads"),c=(0,l.fj)(p,"info"),{data:d}=await (0,r.A)(c,{query:{f:"json"},responseType:"json"});(0,n.Te)(a);let f=(0,m.Wo)(o),g=1e6*d.maxUploadFileSize,h=f?Math.min(2e7,g):2e7;if(e.size>(f?2e9:g))throw Error("Data too large");let w=(0,l.fj)(p,"register"),{data:A}=await (0,r.A)(w,{query:{f:"json",itemName:t.replaceAll("/","_").replaceAll("\\","_"),description:s},responseType:"json",method:"post"});if((0,n.Te)(a),!A.success)throw Error("Registration failed");let{itemID:T}=A.item;u=(0,l.fj)(p,T);let b=(0,l.fj)(u,"uploadPart"),P=Math.ceil(e.size/h),v=[];for(let t=0;t<P;++t)v.push(e.slice(t*h,Math.min((t+1)*h,e.size)));let x=v.slice().reverse(),j=[],N=y(P,a?.onProgress,"uploadItem"),$=async()=>{for(;0!==x.length;){let e=v.length-x.length,t=x.pop(),s=new FormData,o=N.simulate(e,function(e,t=10){return(0,i.gr)((0,i.Kp)(8e-6*e/t))}(t.size));try{s.append("f","json"),s.append("file",t),s.append("partId",`${e}`);let{data:o}=await (0,r.A)(b,{timeout:0,body:s,responseType:"json",method:"post"});if((0,n.Te)(a),!o.success)throw Error("Part upload failed")}finally{o.remove()}}};for(let e=0;e<3&&0!==x.length;++e)j.push($());await Promise.all(j);let D=(0,l.fj)(u,"commit"),{data:E}=await (0,r.A)(D,{query:{f:"json",parts:v.map((e,t)=>t).join(",")},responseType:"json",method:"post"});if((0,n.Te)(a),!E.success)throw Error("Commit failed");return E.item}catch(e){if(null!=u){let e=(0,l.fj)(u,"delete");await (0,r.A)(e,{query:{f:"json"},responseType:"json",method:"post"})}throw e}}var v=s(92528),x=s(51611),j=s(75095);async function N(e,t,s){let r=e.length;if(!r)return s?.onProgress?.(1),[];let o=y(r,s?.onProgress,"uploadAssets");return Promise.all(e.map((e,r)=>$(e,t,{...s,onProgress:o.makeOnProgress(r)})))}async function $(e,{layer:t,ongoingUploads:s},r){var o;let a=s.get(e);if(a)return a;if(!((o=t).infoFor3D&&o.url))throw new d.Wt;if(function(e,t){let{parsedUrl:s}=t;return null!=s&&e.metadata.externalSources.some(e=>(0,c.eN)(e,s))}(e,t))return r?.onProgress?.(1),e;let n=D(e,t,r);s.set(e,n);try{await n}finally{s.delete(e)}return e}async function D(e,t,s){let{metadata:r}=e,{displaySource:a}=r,i=_(a?.source,t,{checkForConversionRequired:(0,o.A)("enable-feature:georeferenced-uploads")}),l=null!=i?E(i,t,s):r.externalSources.length>0?F(e,t,s):M(e,t,s),u=await l;return(0,n.Te)(s),e.addExternalSources([u]),e}async function E(e,t,s){return{source:await k(e,t,s),original:!0,unitConversionDisabled:!0}}async function F(e,t,s){let r=Z(t),{externalSources:o}=e.metadata,a=function(e,t){for(let s of e){let e=_(s.source,t);if(e)return e}return null}(o,t);if(!a)throw new d.xY;let n=y(f.uploadConvertibleSource,s?.onProgress,"uploadConvertibleSource"),l=await k(a,t,{onProgress:n.makeOnProgress("uploadEditSource")});e.addExternalSources([{source:l,original:!0}]);let u=a.reduce((e,{asset:t})=>t instanceof File?e+t.size:e,0),p=n.simulate("serviceAssetsToGlb",function(e,t=10){return(0,i.gr)((0,i.Kp)(8e-6*e/t))}(u));try{let{source:o,transform:a,origin:n}=await B(l,t,r);return e.transform=a,n&&(e.metadata.georeferenced=!0,s?.useAssetOrigin&&(e.vertexSpace.origin=[n.x,n.y,n.z??0],e.spatialReference=n.spatialReference)),{source:o,unitConversionDisabled:!0}}finally{p.remove()}}async function M(e,t,s){let r=y(f.uploadLocalMesh,s?.onProgress,"uploadLocalMesh"),o=S(e,t,{...s,onProgress:r.makeOnProgress("meshToAssetBlob")});return{source:await R([o],t,{...s,onProgress:r.makeOnProgress("uploadAssetBlobs")}),extent:e.extent.clone(),original:!0}}async function S(e,t,s){let r=Z(t),o=await e.load(s),a=await o.toBinaryGLTF({origin:o.origin,signal:s?.signal,ignoreLocalTransform:!0,unitConversionDisabled:!0});return(0,n.Te)(s),{blob:new Blob([a],{type:"model/gltf-binary"}),assetName:`${(0,u.yS)()}.glb`,assetType:r}}function _(e,{infoFor3D:t},s={}){if(!e)return null;let{supportedFormats:r,editFormats:o}=t,a=(0,c.WN)(e),n=[],i=(0,v.ND)(t),l=(0,v.nr)(t),u=!1;for(let e of a){let t=function(e,t){let s=(0,c.fH)(e,t);return s?{asset:e,assetType:s}:null}(e,r);if(!t)return null;let{assetType:a}=t;if(s.checkForConversionRequired&&(a===i||a===l))return null;o.includes(a)&&(u=!0),n.push(t)}return u?n:null}async function k(e,t,s){return R(e.map(e=>I(e,s)),t,s)}async function R(e,t,s){let r=y(f.uploadAssetBlobs,s?.onProgress,"uploadAssetBlobs"),o=await function(e,t,s){let r=y(e.length,s?.onProgress,"prepareAssetItems");return Promise.all(e.map(async(e,o)=>{let a=C(await e,t,{...s,onProgress:r.makeOnProgress(o)});return(0,n.Te)(s),a}))}(e,t,{...s,onProgress:r.makeOnProgress("prepareAssetItems")});(0,n.Te)(s);let a=o.map(({item:e})=>e),{uploadResults:i}=await U(a,t,{...s,onProgress:r.makeOnProgress("uploadAssetItems")});return(0,n.Te)(s),e.map((e,s)=>(function(e,t,s){let{success:r}=t;if(!r){let{error:s}=t;throw new d.hK(e.assetName,s)}let{assetHash:o}=t,{assetName:a,item:{assetType:n}}=e,{infoFor3D:{supportedFormats:i}}=s,l=(0,v.Fm)(n,i);if(!l)throw new d.H2(n);return new c.Qp(a,l,[new c.Bq(`${s.parsedUrl.path}/assets/${o}`,o)])})(o[s],i[s],t))}async function I(e,t){let{asset:s,assetType:r}=e;if(s instanceof File)return{blob:s,assetName:s.name,assetType:r};let o=await s.toBlob(t);return(0,n.Te)(t),{blob:o,assetName:s.assetName,assetType:r}}async function C(e,t,s){let{blob:r,assetType:o,assetName:i}=e,u=null;try{let e=await P({data:r,name:i},t.url,s);(0,n.Te)(s),u={assetType:o,assetUploadId:e.itemID}}catch(e){(0,n.QP)(e),a.A.getLogger("esri.layers.graphics.sources.support.uploadAssets").warnOnce(`Service ${t.url} does not support the REST Uploads API.`)}if(!u){let e=await (0,l._0)(r);if((0,n.Te)(s),!e.isBase64)throw new d.$1;u={assetType:o,assetData:e.data}}if(!u)throw new d.WF;return{item:u,assetName:i}}async function U(e,t,s){let o=A(s?.onProgress);try{let o=await (0,r.A)((0,l.fj)(t.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(e)},method:"post",responseType:"json"});if((0,n.Te)(s),o.data.uploadResults.length!==e.length)throw new d.nS(e.length,o.data.uploadResults.length);return o.data}finally{o.remove()}}async function B(e,t,s){let a,n=e.map(({assetName:e,parts:t})=>({assetName:e,assetHash:t[0].partHash}));try{let e=(0,l.fj)(t.parsedUrl.path,"convert3D"),o=t.capabilities?.operations.supportsAsyncConvert3D;a=(await (o?Y:function(e,t){return(0,r.A)(e,t)})(e,{query:{f:"json",assets:JSON.stringify(n),transportType:"esriTransportTypeUrl",targetFormat:s,async:o},responseType:"json",timeout:0})).data}catch(e){throw new d.MT}var i=t,u=a;let f={source:u.assets.map(e=>{let t=(0,v.R_)(e.contentType,i.infoFor3D.supportedFormats);if(!t)throw new d.H2(t);return new c.Qp(e.assetName,e.contentType,[new c.Bq(e.assetURL,e.assetHash)])}),origin:void 0,transform:void 0};if((0,o.A)("enable-feature:georeferenced-uploads")&&u.transform){if(f.transform=(0,j.f)(u.transform),u.spatialReference){let e=p.A.fromJSON(u.spatialReference);f.origin=(0,j.V)(u.transform,e)}}else f.transform=(0,x.Z)(i.spatialReference);return f}async function Y(e,t){let s=(await (0,r.A)(e,t)).data.statusUrl;for(;;){let e=(await (0,r.A)(s,{query:{f:"json"},responseType:"json"})).data;switch(e.status){case"Completed":return(0,r.A)(e.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw Error(e.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw Error()}await (0,n.Pl)(q)}}function Z({infoFor3D:e}){let t=(0,v.U9)(e);if(!t)throw new d.uh;return t}let q=(0,i.l5)(1e3)},51611:(e,t,s)=>{s.d(t,{Z:()=>a});var r=s(8922),o=s(56113);function a(e){let t=1/(0,r.GA)(e,1);return 1!==t?new o.A({scale:[t,t,t]}):void 0}},75095:(e,t,s)=>{s.d(t,{V:()=>a,f:()=>n});var r=s(39960),o=s(56113);function a(e,t,s=i){return new r.A({x:e[s.originX],y:e[s.originY],z:e[s.originZ],spatialReference:t})}function n(e,t=i){return new o.A({translation:[e[t.translationX],-e[t.translationZ],e[t.translationY]],rotationAxis:[e[t.rotationX],-e[t.rotationZ],e[t.rotationY]],rotationAngle:e[t.rotationDeg],scale:[e[t.scaleX],e[t.scaleZ],e[t.scaleY]]})}let i={originX:"originX",originY:"originY",originZ:"originZ",translationX:"translationX",translationY:"translationY",translationZ:"translationZ",scaleX:"scaleX",scaleY:"scaleY",scaleZ:"scaleZ",rotationX:"rotationX",rotationY:"rotationY",rotationZ:"rotationZ",rotationDeg:"rotationDeg"}},89587:(e,t,s)=>{s.d(t,{$1:()=>u,H2:()=>f,MT:()=>m,VP:()=>g,WF:()=>p,Wt:()=>n,XQ:()=>h,hK:()=>d,nS:()=>c,uh:()=>i,xY:()=>l});var r=s(32391);let o="upload-assets",a=()=>Error();class n extends r.A{constructor(){super(`${o}:unsupported`,"Layer does not support asset uploads.",a())}}class i extends r.A{constructor(){super(`${o}:no-glb-support`,"Layer does not support glb.",a())}}class l extends r.A{constructor(){super(`${o}:no-supported-source`,"No supported external source found",a())}}class u extends r.A{constructor(){super(`${o}:not-base-64`,"Expected gltf data in base64 format after conversion.",a())}}class p extends r.A{constructor(){super(`${o}:unable-to-prepare-options`,"Unable to prepare uploadAsset request options.",a())}}class c extends r.A{constructor(e,t){super(`${o}:bad-response`,`Bad response. Uploaded ${e} items and received ${t} results.`,a())}}class d extends r.A{constructor(e,t){super(`${o}-layer:upload-failed`,`Failed to upload mesh file ${e}. Error code: ${t?.code??"-1"}. Error message: ${t?.messages??"unknown"}`,a())}}class f extends r.A{constructor(e){super(`${o}-layer:unsupported-format`,`The service allowed us to upload an asset of FormatID ${e}, but it does not list it in its supported formats.`,a())}}class m extends r.A{constructor(){super(`${o}:convert3D-failed`,"convert3D failed.")}}class g extends r.A{constructor(){super("invalid-input:no-model","No supported model found")}}class h extends r.A{constructor(){super("invalid-input:multiple-models","Multiple supported models found")}}}}]);