"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7607],{1220:(e,t,i)=>{i.d(t,{H:()=>d});var r=i(81856),s=i(91838);i(57845),i(61939),i(33638);var n=i(12709),a=i(71017),o=i(92713),l=i(86942),u=i(33498),p=i(82698);let m=class extends a.A.ClonableMixin(o.A){constructor(e){super(e),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};(0,r._)([(0,s.MZ)({type:String,json:{write:{isRequired:!0}}})],m.prototype,"name",void 0),(0,r._)([(0,s.MZ)({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),(0,u.e)({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],m.prototype,"method",void 0),(0,r._)([(0,s.MZ)({type:String,json:{write:{isRequired:!0}}})],m.prototype,"value",void 0),(0,r._)([(0,s.MZ)({type:[l.jz],json:{write:{isRequired:!0}}})],m.prototype,"bandIds",void 0),(0,r._)([(0,s.MZ)({types:p.uy,json:{write:!0,origins:{"web-scene":{types:p.Gj,write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],m.prototype,"renderer",void 0);let c=m=(0,r._)([(0,n.$)("esri.renderers.support.RasterPresetRenderer")],m),d=e=>{let t=class extends e{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return(0,r._)([(0,s.MZ)({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],t.prototype,"activePresetRendererName",void 0),(0,r._)([(0,s.MZ)({type:[c],json:{name:"layerDefinition.presetRenderers",write:!0}})],t.prototype,"presetRenderers",void 0),t=(0,r._)([(0,n.$)("esri.layers.mixins.RasterPresetRendererMixin")],t)}},6961:(e,t,i)=>{i.r(t),i.d(t,{default:()=>iE});var r,s,n,a,o,l,u,p,m,c=i(81856),d=i(39267),h=i(71017),y=i(32391),g=i(21892),f=i(92753),w=i(91838);i(57845);var v=i(61939);i(33638);var R=i(12709),_=i(7780),b=i(64171),S=i(97135),I=i(39166),M=i(33715),A=i(45257),x=i(90525),F=i(86942),D=i(53480),N=i(61414),T=i(87960),j=i(91463),P=i(71760),Z=i(76572),O=i(22580),C=i(92713),V=i(76809),J=i(50518);let E={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}};var q=i(36940),G=i(91527),z=i(11004);let $=new Set(["u1","u2","u4","u8","s8","u16","s16"]),L={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},U=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function B(e){return U.has(e.type)}function H(e,t){if(!e||!t)return(0,M.o8)(e||t);let i=(0,M.o8)(e);if(i.functionDefinition&&t.rasterFunctionDefinition){let e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=void 0),function e(t,i){for(let r in t)"raster"===r.toLowerCase()&&("RasterFunctionVariable"===t[r].type?(t[r]=i.rasterFunctionDefinition,t[r].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===t[r].type&&e(t[r].arguments,i))}(i.functionDefinition.arguments,t),i.rasterFunctionDefinition=i.functionDefinition.toJSON()}else"none"!==t.functionName?.toLowerCase()&&(function e(t){let i=t?.Raster??t?.raster;return i&&"esri.layers.support.RasterFunction"===i.declaredClass?e(i.functionArguments):t}(i.functionArguments).Raster=t);return i}function Q(e){let t=(0,M.o8)(E[e.functionName+"Function"]),i=e.functionArguments;for(let e in i)"raster"===e.toLowerCase()?(t.arguments[e]=Q(i[e]),t.arguments[e].type="RasterFunctionTemplate"):"colormap"===e.toLowerCase()?(t.arguments[e].value=function(e){let t=[],i=[];return e.forEach(e=>{t.push(e[0]),i.push((0,q.vL)([...e.slice(1),255]))}),{type:"RasterColormap",values:t,colors:i}}(i[e]),t.arguments.ColorSchemeType.value=0):t.arguments[e].value=i[e];return t}let k={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function K(e,t){let i=$.has(t)?(0,J.hP)(t):null;return i&&e.push([Math.floor(i[0]-1),0,0,0],[Math.ceil(i[1]+1),0,0,0]),e}function W(e){if(null==e)return;let{fields:t}=e,i=t?.find(e=>e?.name&&"value"===e.name.toLowerCase());return i?.name}function X(e){return"polygon-3d"===e.symbol?.type?e.symbol.symbolLayers?.find(e=>"fill"===e.type)?.material?.color:e.symbol?.color}var Y=i(64302),ee=i(48305);let et=class extends C.A{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(e,t,i){this.layer.version<10.3||(t[i]=e)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(e,t,i){this.format&&this.format.toLowerCase().includes("jpg")&&null!=e&&(t[i]=e)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}get format(){return"vector-field"===this.layer.renderer?.type?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}get pixelType(){let{layer:e}=this;return e.pixelType!==e.serviceRasterInfo.pixelType?e.pixelType:void 0}writeLercVersion(e,t,i){"lerc"===this.format&&this.layer.version>=10.5&&(t[i]=e)}get version(){let e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("rasterFunction"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("pixelType"),e.commitProperty("definitionExpression"),e.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){let e=this.layer,t=e.mosaicRule,i=e.definitionExpression;return t?i&&i!==t.where&&((t=t.clone()).where=i):i&&(t=new Y.A({where:i})),t}get rasterFunction(){var e,t;let i=this.layer,{rasterFunction:r}=i,s=i.pixelFilter,n=!i.format||i.format.includes("jpg")||i.format.includes("png");r=this._addResampleRasterFunction(r);let a=i.multidimensionalSubset?.areaOfInterest;return a&&(e=r,t=a,r=H(new V.A({functionName:"Clip",functionArguments:{ClippingGeometry:t.toJSON(),ClippingType:1}}),e)),n&&!s&&"vector-field"!==i.renderer?.type&&(r=this.combineRendererWithRenderingRule(r)),r}combineRendererWithRenderingRule(e){let t=this.layer,{rasterInfo:i,renderer:r}=t;return(e=e||t.rasterFunction,r&&B(r))?H(function(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){let i=t.convertToRFT,r=new V.A;r.functionName="Stretch";let s=k[G.u.toJSON(e.stretchType)],n={StretchType:s,Statistics:e.customStatistics?.map(e=>[e.min,e.max,e.avg??0,e.stddev??1]),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(n.Min=e.outputMin),null!=e.outputMax&&(n.Max=e.outputMax),s===k.standardDeviation?(n.NumberOfStandardDeviations=e.numberOfStandardDeviations,r.outputPixelType="u8"):s===k.percentClip?(n.MinPercent=e.minPercent,n.MaxPercent=e.maxPercent,r.outputPixelType="u8"):s===k.minMax?r.outputPixelType="u8":s===k.sigmoid&&(n.SigmoidStrengthLevel=e.sigmoidStrengthLevel),r.functionArguments=n,r.variableName="Raster",e.colorRamp){let s=e.colorRamp,n=new V.A;if(i)n.functionArguments={ColorRamp:(0,q.hf)(s)};else{let i=(0,q.hs)(s,!0);if(i)n.functionArguments={colorRampName:i};else if(t.convertColorRampToColormap&&("algorithmic"===s.type||"multipart"===s.type))n.functionArguments={Colormap:(0,q.R8)(s)};else{let t=e.colorRamp.toJSON();"algorithmic"===t.type?t.algorithm=t.algorithm||"esriCIELabAlgorithm":"multipart"===t.type&&t.colorRamps?.length&&t.colorRamps.forEach(e=>e.algorithm=e.algorithm||"esriCIELabAlgorithm"),n.functionArguments={colorRamp:t}}}return n.variableName="Raster",n.functionName="Colormap",n.functionArguments.Raster=r,i?new V.A({rasterFunctionDefinition:Q(n)}):n}return i?new V.A({rasterFunctionDefinition:Q(r)}):r}(e,t);case"class-breaks":return function(e,t){let i=[],r=[],s=[],n=[],{pixelType:a,rasterAttributeTable:o}=t,l=null==o?null:o.features,u=W(o);if(u&&l&&Array.isArray(l)&&e.classBreakInfos){e.classBreakInfos.forEach((t,i)=>{let r,s=t.symbol?.color;s?.a&&null!=t.minValue&&null!=t.maxValue&&l.forEach(a=>{null!=t.minValue&&null!=t.maxValue&&((r=a.attributes[e.field])>=t.minValue&&r<t.maxValue||i===e.classBreakInfos.length-1&&r>=t.minValue)&&n.push([a.attributes[u],s.r,s.g,s.b])})});let i=a?K(n,a):n,r=new V.A;return r.functionName="Colormap",r.functionArguments={},r.functionArguments.Colormap=i,r.variableName="Raster",t.convertToRFT?new V.A({rasterFunctionDefinition:Q(r)}):r}e.classBreakInfos.forEach((e,t)=>{if(null==e.minValue||null==e.maxValue)return;let a=e.symbol&&e.symbol.color;a?.a?(0===t?i.push(e.minValue,e.maxValue+1e-4):i.push(e.minValue+1e-4,e.maxValue+1e-4),r.push(t),n.push([t,a.r,a.g,a.b])):s.push(e.minValue,e.maxValue)});let p=a?K(n,a):n,m=new V.A;m.functionName="Remap",m.functionArguments={InputRanges:i,OutputValues:r,NoDataRanges:s},m.variableName="Raster";let c=new V.A;return c.functionName="Colormap",c.functionArguments={Colormap:p,Raster:m},t.convertToRFT?new V.A({rasterFunctionDefinition:Q(c)}):c}(e,t);case"unique-value":return function(e,t){let i=[],{pixelType:r,rasterAttributeTable:s}=t,n=null==s?null:s.features,a=W(s),o=e.defaultSymbol?.color?.toRgb(),l=e.uniqueValueInfos;if(l)if(n){if(a){let t=new Map;l.forEach(e=>{let i=e.value,r=X(e);null!=i&&r?.a&&t.set(String(i),r.toRgb())});let r=e.field;r&&n.forEach(({attributes:e})=>{let s=String(e[r]),n=e[a],l=t.get(s);l?i.push([n,...l]):o&&i.push([n,...o])})}}else for(let e=0;e<l.length;e++){let t=l[e],r=X(t),s=+t.value;if(r?.a){if(isNaN(s))return null;i.push([s,r.r,r.g,r.b])}}let u=r?K(i,r):i,p=new V.A;return p.functionName="Colormap",p.functionArguments={},p.functionArguments.Colormap=u,p.variableName="Raster",t.convertToRFT?new V.A({rasterFunctionDefinition:Q(p)}):p}(e,t);case"raster-colormap":var i=e,r=t;let s=i.extractColormap();if(!s||0===s.length)return null;let{pixelType:n}=r,a=n?K(s,n):s,o=new V.A;return o.functionName="Colormap",o.functionArguments={},o.functionArguments.Colormap=a,r.convertToRFT?new V.A({rasterFunctionDefinition:Q(o)}):o;case"vector-field":return function(e,t){let i,r,s=new V.A;s.functionName="VectorFieldRenderer";let{dataType:n,bandNames:a}=t;if(a&&2===a.length){let e=a.map(e=>e.toLowerCase());i=e.indexOf("magnitude"),r=e.indexOf("direction")}-1!==i&&null!==i||(i=0,r=1);let o="arithmetic"===e.rotationType?1:2,l=+("flow-from"!==e.flowRepresentation),u=e.visualVariables?e.visualVariables.find(e=>"Magnitude"===e.field):new z.A;s.functionArguments={magnitudeBandID:i,directionBandID:r,isUVComponents:"vector-uv"===n,referenceSystem:o,massFlowAngleRepresentation:l,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:L[e.style.toLowerCase().replace("-","_")],minimumMagnitude:u.minDataValue,maximumMagnitude:u.maxDataValue,minimumSymbolSize:u.minSize,maximumSymbolSize:u.maxSize};let p=Q(s);return t.convertToRFT?V.A.fromJSON({rasterFunctionDefinition:p}):s}(e,t);case"raster-shaded-relief":return function(e,t){let i=t.convertToRFT;if("elevation"!==t.dataType&&("generic"!==t.dataType||1!==t.bandCount||"s16"!==t.pixelType&&"s32"!==t.pixelType&&"f32"!==t.pixelType&&"f64"!==t.pixelType))return new V.A;let r=new V.A;r.functionName="Hillshade";let s=+("traditional"!==e.hillshadeType),n="none"===e.scalingType?1:3,a={HillshadeType:s,SlopeType:n,ZFactor:e.zFactor};return 0===s&&(a.Azimuth=e.azimuth,a.Altitude=e.altitude),3===n&&(a.PSPower=e.pixelSizePower,a.PSZFactor=e.pixelSizeFactor),r.functionArguments=a,r.variableName="Raster",e.colorRamp&&(r.functionName="ShadedRelief",i?a.ColorRamp=(0,q.hf)(e.colorRamp):a.Colormap=(0,q.R8)(e.colorRamp)),i?new V.A({rasterFunctionDefinition:Q(r)}):r}(e,t);case"flow":throw Error("Unsupported rendering rule.")}}(r,{rasterAttributeTable:i.attributeTable,pixelType:i.pixelType,dataType:i.dataType,bandNames:i.bandInfos.map(({name:e})=>e),convertColorRampToColormap:t.version<10.6,convertToRFT:!!e?.rasterFunctionDefinition,bandCount:i.bandCount}),e):e}_addResampleRasterFunction(e){if("vector-field"!==this.layer.renderer?.type||"Resample"===e?.functionName)return e;let t="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,i=this.layer.serviceRasterInfo.pixelSize,r=new V.A({functionName:"Resample",functionArguments:{ResamplingType:t,InputCellSize:i}});return H(r=e?.rasterFunctionDefinition?new V.A({rasterFunctionDefinition:Q(r)}):r,e)}};(0,c._)([(0,w.MZ)()],et.prototype,"layer",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],et.prototype,"adjustAspectRatio",null),(0,c._)([(0,_.K)("adjustAspectRatio")],et.prototype,"writeAdjustAspectRatio",null),(0,c._)([(0,w.MZ)({json:{write:!0}})],et.prototype,"bandIds",null),(0,c._)([(0,w.MZ)({json:{write:!0}})],et.prototype,"compression",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],et.prototype,"compressionQuality",null),(0,c._)([(0,_.K)("compressionQuality")],et.prototype,"writeCompressionQuality",null),(0,c._)([(0,w.MZ)({json:{write:!0}})],et.prototype,"compressionTolerance",null),(0,c._)([(0,_.K)("compressionTolerance")],et.prototype,"writeCompressionTolerance",null),(0,c._)([(0,w.MZ)({json:{write:!0}})],et.prototype,"format",null),(0,c._)([(0,w.MZ)({type:String,json:{read:{reader:ee.SZ.read},write:{writer:ee.SZ.write}}})],et.prototype,"interpolation",null),(0,c._)([(0,w.MZ)({json:{write:!0}})],et.prototype,"noData",null),(0,c._)([(0,w.MZ)({type:String,json:{read:{reader:ee.hm.read},write:{writer:ee.hm.write}}})],et.prototype,"noDataInterpretation",null),(0,c._)([(0,w.MZ)({type:ee.e8.apiValues,json:{read:ee.e8.read,write:ee.e8.write}})],et.prototype,"pixelType",null),(0,c._)([(0,w.MZ)({json:{write:!0}})],et.prototype,"lercVersion",void 0),(0,c._)([(0,_.K)("lercVersion")],et.prototype,"writeLercVersion",null),(0,c._)([(0,w.MZ)({type:Number})],et.prototype,"version",null),(0,c._)([(0,w.MZ)({json:{write:!0}})],et.prototype,"mosaicRule",null),(0,c._)([(0,w.MZ)({json:{write:!0,name:"renderingRule"}})],et.prototype,"rasterFunction",null),et=(0,c._)([(0,R.$)("esri.layers.support.ExportImageServiceParameters")],et);var ei=i(80824),er=i(47823),es=i(72875),en=i(99132),ea=i(93409),eo=i(11984),el=i(65018),eu=i(84324),ep=i(24088),em=i(10303),ec=i(2609),ed=i(82330),eh=i(31025),ey=i(82698),eg=i(31789),ef=i(25606),ew=i(86277),ev=i(39960);let eR=class extends h.A.ClonableMixin(C.A){constructor(){super(...arguments),this.fromGeometry=null,this.toGeometry=null,this.objectIds=null,this.where=null,this.maxCount=null}};(0,c._)([(0,w.MZ)({type:ev.A,json:{read:!0}})],eR.prototype,"fromGeometry",void 0),(0,c._)([(0,w.MZ)({type:ev.A,json:{read:!0,write:!0}})],eR.prototype,"toGeometry",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],eR.prototype,"objectIds",void 0),(0,c._)([(0,w.MZ)({type:String,json:{write:!0}})],eR.prototype,"where",void 0),(0,c._)([(0,w.MZ)({type:Number,json:{write:!0}})],eR.prototype,"maxCount",void 0);let e_=eR=(0,c._)([(0,R.$)("esri.rest.support.FindImagesParameters")],eR),eb=e=>{let t=class extends e{constructor(){super(...arguments),this.make=null,this.model=null,this.focalLength=null,this.pixelSize=null,this.rows=null,this.cols=null}};return(0,c._)([(0,w.MZ)({json:{write:!0}})],t.prototype,"make",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],t.prototype,"model",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],t.prototype,"focalLength",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],t.prototype,"pixelSize",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],t.prototype,"rows",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],t.prototype,"cols",void 0),t=(0,c._)([(0,R.$)("esri.rest.support.CameraInfoMixin")],t)},eS=class extends eb(C.A){constructor(){super(...arguments),this.id=null,this.referenceUri=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.perspectiveCenter=null,this.orientation=null}writeAcquisitionDate(e,t){t.acquisitionDate=e?.getTime()}};(0,c._)([(0,w.MZ)({json:{write:!0}})],eS.prototype,"id",void 0),(0,c._)([(0,w.MZ)({json:{name:"uri",write:!0}})],eS.prototype,"referenceUri",void 0),(0,c._)([(0,w.MZ)({type:Date,json:{write:!0}})],eS.prototype,"acquisitionDate",void 0),(0,c._)([(0,_.K)("acquisitionDate")],eS.prototype,"writeAcquisitionDate",null),(0,c._)([(0,w.MZ)({json:{write:!0}})],eS.prototype,"cameraID",void 0),(0,c._)([(0,w.MZ)({type:ev.A,json:{write:!0}})],eS.prototype,"center",void 0),(0,c._)([(0,w.MZ)({type:ev.A,json:{write:!0}})],eS.prototype,"perspectiveCenter",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],eS.prototype,"orientation",void 0);let eI=eS=(0,c._)([(0,R.$)("esri.rest.support.ImageInspectionInfo")],eS),eM=class extends C.A{constructor(){super(...arguments),this.images=null}};(0,c._)([(0,w.MZ)({type:[eI],json:{write:!0}})],eM.prototype,"images",void 0);let eA=eM=(0,c._)([(0,R.$)("esri.rest.support.FindImagesResult")],eM),ex=r=class extends C.A{constructor(e){super(e),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new r((0,M.o8)({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};(0,c._)([(0,w.MZ)({type:[String],json:{name:"angleName",write:!0}})],ex.prototype,"angleNames",void 0),(0,c._)([(0,w.MZ)({type:ev.A,json:{write:!0}})],ex.prototype,"point",void 0),(0,c._)([(0,w.MZ)({type:j.A,json:{write:!0}})],ex.prototype,"spatialReference",void 0),(0,c._)([(0,w.MZ)({type:F.jz,json:{write:!0}})],ex.prototype,"rasterId",void 0);let eF=ex=r=(0,c._)([(0,R.$)("esri.rest.support.ImageAngleParameters")],ex),eD=class extends C.A{constructor(e){super(e),this.north=null,this.up=null,this.spatialReference=null}};(0,c._)([(0,w.MZ)({type:Number,json:{write:!0}})],eD.prototype,"north",void 0),(0,c._)([(0,w.MZ)({type:Number,json:{write:!0}})],eD.prototype,"up",void 0),(0,c._)([(0,w.MZ)({type:j.A,json:{write:!0}})],eD.prototype,"spatialReference",void 0);let eN=eD=(0,c._)([(0,R.$)("esri.rest.support.ImageAngleResult")],eD);var eT=i(8922),ej=i(59879),eP=i(30781);let eZ=new eP.J({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"}),eO=class extends C.A{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};(0,c._)([(0,w.MZ)({type:Number,json:{read:!0,write:!0}})],eO.prototype,"value",void 0),(0,c._)([(0,w.MZ)({type:String,json:{read:!0,write:!0}})],eO.prototype,"displayValue",void 0),(0,c._)([(0,w.MZ)({type:Number,json:{read:!0,write:!0}})],eO.prototype,"uncertainty",void 0),eO=(0,c._)([(0,R.$)("esri.rest.support.imageMeasureUtils.BaseImageMeasureResultValue")],eO);let eC=class extends eO{constructor(){super(...arguments),this.unit=null}};(0,c._)([(0,w.MZ)({type:String,json:{read:eT.Sk.read,write:eT.Sk.write}})],eC.prototype,"unit",void 0),eC=(0,c._)([(0,R.$)("esri.rest.support.imageMeasureUtils.ImageMeasureResultLengthValue")],eC);let eV=class extends eO{constructor(){super(...arguments),this.unit=null}};(0,c._)([(0,w.MZ)({type:String,json:{read:eT.dk.read,write:eT.dk.write}})],eV.prototype,"unit",void 0),eV=(0,c._)([(0,R.$)("esri.rest.support.imageMeasureUtils.ImageMeasureResultAreaValue")],eV);let eJ=class extends eO{constructor(){super(...arguments),this.unit=null}};(0,c._)([(0,w.MZ)({type:String,json:{read:eT.b$.read,write:eT.b$.write}})],eJ.prototype,"unit",void 0),eJ=(0,c._)([(0,R.$)("esri.rest.support.imageMeasureUtils.ImageMeasureResultAngleValue")],eJ);let eE=class extends C.A{constructor(e){super(e),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};(0,c._)([(0,w.MZ)()],eE.prototype,"type",void 0),(0,c._)([(0,w.MZ)({type:eZ.apiValues,json:{read:eZ.read,write:eZ.write}})],eE.prototype,"measureOperation",void 0),(0,c._)([(0,w.MZ)({type:Y.A,json:{write:!0}})],eE.prototype,"mosaicRule",void 0),(0,c._)([(0,w.MZ)({type:ev.A,json:{write:!0}})],eE.prototype,"pixelSize",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],eE.prototype,"raster",void 0);let eq=eE=(0,c._)([(0,R.$)("esri.rest.support.BaseImageMeasureParameters")],eE),eG=s=class extends eq{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,eg.$B)(e),t[i]=e.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new s((0,M.o8)({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,c._)([(0,w.MZ)({types:ej.yR,json:{name:"fromGeometry",read:!0,write:!0}})],eG.prototype,"geometry",void 0),(0,c._)([(0,_.K)("geometry")],eG.prototype,"writeGeometry",null),(0,c._)([(0,w.MZ)({type:eZ.apiValues,json:{write:eZ.write}})],eG.prototype,"measureOperation",null),(0,c._)([(0,w.MZ)({json:{read:!0}})],eG.prototype,"is3D",void 0),(0,c._)([(0,w.MZ)({type:String,json:{read:eT.Sk.read,write:eT.Sk.write}})],eG.prototype,"linearUnit",void 0),(0,c._)([(0,w.MZ)({type:String,json:{read:eT.dk.read,write:eT.dk.write}})],eG.prototype,"areaUnit",void 0);let ez=eG=s=(0,c._)([(0,R.$)("esri.rest.support.ImageAreaParameters")],eG),e$=class extends C.A{constructor(e){super(e),this.name=null,this.sensorName=null}};(0,c._)([(0,w.MZ)({type:String,json:{read:!0,write:!0}})],e$.prototype,"name",void 0),(0,c._)([(0,w.MZ)({type:String,json:{read:!0,write:!0}})],e$.prototype,"sensorName",void 0);let eL=e$=(0,c._)([(0,R.$)("esri.rest.support.BaseImageMeasureResult")],e$),eU=class extends eL{constructor(){super(...arguments),this.area=null,this.perimeter=null}};(0,c._)([(0,w.MZ)({type:eV,json:{read:!0,write:!0}})],eU.prototype,"area",void 0),(0,c._)([(0,w.MZ)({type:eC,json:{read:!0,write:!0}})],eU.prototype,"perimeter",void 0);let eB=eU=(0,c._)([(0,R.$)("esri.rest.support.ImageAreaResult")],eU),eH=class extends h.A.ClonableMixin(C.A){constructor(){super(...arguments),this.outSpatialReference=null}};(0,c._)([(0,w.MZ)({type:j.A,json:{name:"outSR",write:!0}})],eH.prototype,"outSpatialReference",void 0);let eQ=eH=(0,c._)([(0,R.$)("esri.rest.support.ImageBoundaryParameters")],eH),ek=class extends C.A{constructor(){super(...arguments),this.area=null,this.geometry=null}readGeometry(e,t){return null==e?null:e.rings?T.A.fromJSON(e):N.A.fromJSON(e)}};(0,c._)([(0,w.MZ)({type:Number,json:{write:!0}})],ek.prototype,"area",void 0),(0,c._)([(0,w.MZ)({types:ej.yR,json:{name:"shape",write:!0}})],ek.prototype,"geometry",void 0),(0,c._)([(0,D.w)("geometry")],ek.prototype,"readGeometry",null);let eK=ek=(0,c._)([(0,R.$)("esri.rest.support.ImageBoundaryResult")],ek),eW=n=class extends eq{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(e,t,i){null!=e&&(t.geometryType=(0,eg.$B)(e),t[i]=e.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new n((0,M.o8)({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,c._)([(0,w.MZ)({type:ev.A,json:{read:!0,write:!0}})],eW.prototype,"fromGeometry",void 0),(0,c._)([(0,_.K)("fromGeometry")],eW.prototype,"writeFromGeometry",null),(0,c._)([(0,w.MZ)({type:ev.A,json:{read:!0,write:!0}})],eW.prototype,"toGeometry",void 0),(0,c._)([(0,w.MZ)({type:eZ.apiValues,json:{write:eZ.write}})],eW.prototype,"measureOperation",null),(0,c._)([(0,w.MZ)({json:{read:!0}})],eW.prototype,"is3D",void 0),(0,c._)([(0,w.MZ)({type:String,json:{read:eT.Sk.read,write:eT.Sk.write}})],eW.prototype,"linearUnit",void 0),(0,c._)([(0,w.MZ)({type:String,json:{read:eT.b$.read,write:eT.b$.write}})],eW.prototype,"angularUnit",void 0);let eX=eW=n=(0,c._)([(0,R.$)("esri.rest.support.ImageDistanceParameters")],eW),eY=class extends eL{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};(0,c._)([(0,w.MZ)({type:eC,json:{read:!0,write:!0}})],eY.prototype,"distance",void 0),(0,c._)([(0,w.MZ)({type:eJ,json:{read:!0,write:!0}})],eY.prototype,"azimuthAngle",void 0),(0,c._)([(0,w.MZ)({type:eJ,json:{read:!0,write:!0}})],eY.prototype,"elevationAngle",void 0);let e0=eY=(0,c._)([(0,R.$)("esri.rest.support.ImageDistanceResult")],eY);var e1=i(33498),e2=i(46179),e3=i(47840);let e8=class extends h.A.ClonableMixin(C.A){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,eg.$B)(e),t[i]=JSON.stringify(e.toJSON()))}};(0,c._)([(0,w.MZ)({types:ej.yR,json:{read:eg.rS,write:!0}})],e8.prototype,"geometry",void 0),(0,c._)([(0,_.K)("geometry")],e8.prototype,"writeGeometry",null),(0,c._)([(0,w.MZ)({json:{write:!0}})],e8.prototype,"objectIds",void 0),(0,c._)([(0,e1.e)(e2.x,{ignoreUnknown:!1,name:"spatialRel"})],e8.prototype,"spatialRelationship",void 0),(0,c._)([(0,w.MZ)({type:e3.A,json:{name:"time",write:!0}})],e8.prototype,"timeExtent",void 0),(0,c._)([(0,w.MZ)({type:String,json:{write:!0}})],e8.prototype,"where",void 0);let e4=e8=(0,c._)([(0,R.$)("esri.rest.support.ImageGPSInfoParameters")],e8),e6=class extends eb(C.A){constructor(){super(...arguments),this.id=null}};(0,c._)([(0,w.MZ)({json:{write:!0}})],e6.prototype,"id",void 0);let e5=e6=(0,c._)([(0,R.$)("esri.rest.support.CameraInfo")],e6),e9=class extends C.A{constructor(){super(...arguments),this.id=null,this.name=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.gps=null,this.orientation=null}writeAcquisitionDate(e,t){t.acquisitionDate=e?.getTime()}};(0,c._)([(0,w.MZ)({json:{write:!0}})],e9.prototype,"id",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],e9.prototype,"name",void 0),(0,c._)([(0,w.MZ)({type:Date,json:{write:!0}})],e9.prototype,"acquisitionDate",void 0),(0,c._)([(0,_.K)("acquisitionDate")],e9.prototype,"writeAcquisitionDate",null),(0,c._)([(0,w.MZ)({json:{write:!0}})],e9.prototype,"cameraID",void 0),(0,c._)([(0,w.MZ)({type:ev.A,json:{write:!0}})],e9.prototype,"center",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],e9.prototype,"gps",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],e9.prototype,"orientation",void 0);let e7=e9=(0,c._)([(0,R.$)("esri.rest.support.ImageGPSInfo")],e9),te=class extends C.A{constructor(){super(...arguments),this.images=null,this.cameras=null}};(0,c._)([(0,w.MZ)({type:[e7],json:{write:!0}})],te.prototype,"images",void 0),(0,c._)([(0,w.MZ)({type:[e5],json:{write:!0}})],te.prototype,"cameras",void 0);let tt=te=(0,c._)([(0,R.$)("esri.rest.support.ImageGPSInfoResult")],te),ti=a=class extends eq{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(e,t,i){null!=e&&(t.geometryType=(0,eg.$B)(e),t[i]=e.toJSON())}get measureOperation(){return this.operationType}clone(){return new a((0,M.o8)({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,c._)([(0,w.MZ)({type:ev.A,json:{read:!0}})],ti.prototype,"fromGeometry",void 0),(0,c._)([(0,_.K)("fromGeometry")],ti.prototype,"writeFromGeometry",null),(0,c._)([(0,w.MZ)({type:ev.A,json:{read:!0,write:!0}})],ti.prototype,"toGeometry",void 0),(0,c._)([(0,w.MZ)({type:eZ.apiValues,json:{write:eZ.write}})],ti.prototype,"measureOperation",null),(0,c._)([(0,w.MZ)({json:{read:!0}})],ti.prototype,"operationType",void 0),(0,c._)([(0,w.MZ)({type:String,json:{read:eT.Sk.read,write:eT.Sk.write}})],ti.prototype,"linearUnit",void 0);let tr=ti=a=(0,c._)([(0,R.$)("esri.rest.support.ImageHeightParameters")],ti),ts=class extends eL{constructor(){super(...arguments),this.height=null}};(0,c._)([(0,w.MZ)({type:eC,json:{read:!0,write:!0}})],ts.prototype,"height",void 0);let tn=ts=(0,c._)([(0,R.$)("esri.rest.support.ImageHeightResult")],ts);var ta=i(88389);let to=o=class extends C.A{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,eg.$B)(e),t[i]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t?.mosaicMethod&&(t=Y.A.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,i){null!=e&&(t[i]=JSON.stringify(e.toJSON()))}set rasterFunction(e){let t=e;t?.rasterFunction&&(t=V.A.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}writeRasterFunction(e,t,i){null!=e&&(t[i]=JSON.stringify(e.toJSON())),e.rasterFunctionDefinition&&(t[i]=JSON.stringify(e.rasterFunctionDefinition))}writeRasterFunctions(e,t,i){null!=e&&(t[i]=JSON.stringify(e.map(e=>e.rasterFunctionDefinition||e.toJSON())))}writePixelSize(e,t,i){null!=e&&(t[i]=JSON.stringify(e))}writeTimeExtent(e,t,i){if(null!=e){let r=null!=e.start?e.start.getTime():null,s=null!=e.end?e.end.getTime():null;t[i]=null!=r?null!=s?`${r},${s}`:`${r}`:null}}clone(){return new o((0,M.o8)({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};(0,c._)([(0,w.MZ)({types:ej.yR,json:{write:!0}})],to.prototype,"geometry",void 0),(0,c._)([(0,_.K)("geometry")],to.prototype,"writeGeometry",null),(0,c._)([(0,w.MZ)({type:Y.A,json:{write:!0}})],to.prototype,"mosaicRule",null),(0,c._)([(0,_.K)("mosaicRule")],to.prototype,"writeMosaicRule",null),(0,c._)([(0,w.MZ)({type:V.A,json:{write:!0,name:"renderingRule"}})],to.prototype,"rasterFunction",null),(0,c._)([(0,_.K)("rasterFunction")],to.prototype,"writeRasterFunction",null),(0,c._)([(0,w.MZ)({type:[V.A],json:{write:!0,name:"renderingRules"}})],to.prototype,"rasterFunctions",void 0),(0,c._)([(0,_.K)("rasterFunctions")],to.prototype,"writeRasterFunctions",null),(0,c._)([(0,w.MZ)({type:ev.A,json:{write:!0}})],to.prototype,"pixelSize",void 0),(0,c._)([(0,_.K)("pixelSize")],to.prototype,"writePixelSize",null),(0,c._)([(0,w.MZ)({type:Boolean,json:{write:!0}})],to.prototype,"returnGeometry",void 0),(0,c._)([(0,w.MZ)({type:Boolean,json:{write:!0}})],to.prototype,"returnCatalogItems",void 0),(0,c._)([(0,w.MZ)({type:Boolean,json:{write:!0}})],to.prototype,"returnPixelValues",void 0),(0,c._)([(0,w.MZ)({type:Number,json:{write:!0}})],to.prototype,"maxItemCount",void 0),(0,c._)([(0,w.MZ)({type:e3.A,json:{write:{target:"time"}}})],to.prototype,"timeExtent",void 0),(0,c._)([(0,_.K)("timeExtent")],to.prototype,"writeTimeExtent",null),(0,c._)([(0,w.MZ)({json:{write:!0}})],to.prototype,"raster",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],to.prototype,"viewId",void 0),(0,c._)([(0,w.MZ)({type:Boolean,json:{write:!0}})],to.prototype,"processAsMultidimensional",void 0);let tl=to=o=(0,c._)([(0,R.$)("esri.rest.support.ImageIdentifyParameters")],to);var tu=i(49570);let tp=class extends C.A{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};(0,c._)([(0,w.MZ)({json:{write:!0}})],tp.prototype,"catalogItemVisibilities",void 0),(0,c._)([(0,w.MZ)({type:tu.A,json:{write:!0}})],tp.prototype,"catalogItems",void 0),(0,c._)([(0,w.MZ)({type:ev.A,json:{write:!0}})],tp.prototype,"location",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],tp.prototype,"name",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],tp.prototype,"objectId",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],tp.prototype,"processedValues",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],tp.prototype,"properties",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],tp.prototype,"value",void 0);let tm=tp=(0,c._)([(0,R.$)("esri.rest.support.ImageIdentifyResult")],tp),tc=l=class extends C.A{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(e,t,i){t.geometries={geometryType:"esriGeometryPoint",geometries:e.map(e=>e.toJSON())}}clone(){return new l({geometries:this.geometries?.map(e=>e.clone())??[],rasterId:this.rasterId})}};(0,c._)([(0,w.MZ)({type:[ev.A],json:{write:!0}})],tc.prototype,"geometries",void 0),(0,c._)([(0,_.K)("geometries")],tc.prototype,"writeGeometry",null),(0,c._)([(0,w.MZ)({type:F.jz,json:{write:!0}})],tc.prototype,"rasterId",void 0);let td=tc=l=(0,c._)([(0,R.$)("esri.rest.support.ImagePixelLocationParameters")],tc),th=class extends C.A{constructor(){super(...arguments),this.geometries=null}};(0,c._)([(0,w.MZ)({json:{write:!0}})],th.prototype,"geometries",void 0);let ty=th=(0,c._)([(0,R.$)("esri.rest.support.ImagePixelLocationResult")],th),tg=u=class extends eq{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,eg.$B)(e),t[i]=e.toJSON())}get measureOperation(){let{is3D:e,geometry:t}=this;return"point"===t.type?e?"point-3D":"point":e?"centroid-3D":"centroid"}clone(){return new u((0,M.o8)({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,c._)([(0,w.MZ)({types:ej.yR,json:{name:"fromGeometry",read:eg.rS}})],tg.prototype,"geometry",void 0),(0,c._)([(0,_.K)("geometry")],tg.prototype,"writeGeometry",null),(0,c._)([(0,w.MZ)({type:eZ.apiValues,json:{read:eZ.read,write:eZ.write}})],tg.prototype,"measureOperation",null),(0,c._)([(0,w.MZ)({json:{read:!0}})],tg.prototype,"is3D",void 0);let tf=tg=u=(0,c._)([(0,R.$)("esri.rest.support.ImagePointParameters")],tg),tw=class extends eL{constructor(){super(...arguments),this.point=null}};(0,c._)([(0,w.MZ)({type:ev.A,json:{name:"point.value",read:!0,write:!0}})],tw.prototype,"point",void 0);let tv=tw=(0,c._)([(0,R.$)("esri.rest.support.ImagePointResult")],tw);var tR=i(147);let t_=p=class extends C.A{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.raster=void 0,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,eg.$B)(e),t[i]=e.toJSON())}set locations(e){if(e?.length){let t=new tR.A({spatialReference:e[0].spatialReference,points:e.map(({x:e,y:t})=>[e,t])});this._set("locations",e),this.geometry=t}}clone(){return new p((0,M.o8)({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};(0,c._)([(0,w.MZ)({types:ej.yR,json:{read:eg.rS}})],t_.prototype,"geometry",void 0),(0,c._)([(0,_.K)("geometry")],t_.prototype,"writeGeometry",null),(0,c._)([(0,w.MZ)({type:[ev.A]})],t_.prototype,"locations",null),(0,c._)([(0,w.MZ)({type:String,json:{type:ee.SZ.jsonValues,read:ee.SZ.read,write:ee.SZ.write}})],t_.prototype,"interpolation",void 0),(0,c._)([(0,w.MZ)({type:Y.A,json:{write:!0}})],t_.prototype,"mosaicRule",void 0),(0,c._)([(0,w.MZ)({type:[String],json:{write:!0}})],t_.prototype,"outFields",void 0),(0,c._)([(0,w.MZ)({type:ev.A,json:{write:!0}})],t_.prototype,"pixelSize",void 0),(0,c._)([(0,w.MZ)({type:String,json:{write:!0}})],t_.prototype,"raster",void 0),(0,c._)([(0,w.MZ)({type:Boolean,json:{write:!0}})],t_.prototype,"returnFirstValueOnly",void 0),(0,c._)([(0,w.MZ)({type:Number,json:{write:!0}})],t_.prototype,"sampleDistance",void 0),(0,c._)([(0,w.MZ)({type:Number,json:{write:!0}})],t_.prototype,"sampleCount",void 0),(0,c._)([(0,w.MZ)({type:Number,json:{write:!0}})],t_.prototype,"sliceId",void 0),(0,c._)([(0,w.MZ)({type:e3.A,json:{read:{source:"time"},write:{target:"time"}}})],t_.prototype,"timeExtent",void 0);let tb=t_=p=(0,c._)([(0,R.$)("esri.rest.support.ImageSampleParameters")],t_),tS=class extends C.A{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};(0,c._)([(0,w.MZ)({json:{write:!0}})],tS.prototype,"attributes",void 0),(0,c._)([(0,w.MZ)({type:ev.A,json:{write:!0}})],tS.prototype,"location",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],tS.prototype,"locationId",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],tS.prototype,"rasterId",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],tS.prototype,"resolution",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],tS.prototype,"pixelValue",void 0);let tI=tS=(0,c._)([(0,R.$)("esri.rest.support.ImageSample")],tS),tM=class extends C.A{constructor(){super(...arguments),this.samples=[]}};(0,c._)([(0,w.MZ)({type:[tI],json:{write:!0}})],tM.prototype,"samples",void 0);let tA=tM=(0,c._)([(0,R.$)("esri.rest.support.ImageSampleResult")],tM),tx=class extends h.A.ClonableMixin(C.A){constructor(){super(...arguments),this.geometries=[],this.rasterIds=null,this.outSpatialReference=null}writeGeometries(e,t,i){t.geometries=e?.length?{geometryType:(0,eg.$B)(e[0]),geometries:e.map(e=>({...e.toJSON(),spatialReference:void 0}))}:null}};(0,c._)([(0,w.MZ)({types:[ej.yR]})],tx.prototype,"geometries",void 0),(0,c._)([(0,_.K)("geometries")],tx.prototype,"writeGeometries",null),(0,c._)([(0,w.MZ)({type:[F.jz],json:{write:!0}})],tx.prototype,"rasterIds",void 0),(0,c._)([(0,w.MZ)({type:j.A,json:{name:"outSR",write:!0}})],tx.prototype,"outSpatialReference",void 0);let tF=tx=(0,c._)([(0,R.$)("esri.rest.support.ImageToMapMultirayParameters")],tx),tD=class extends h.A.ClonableMixin(C.A){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,eg.$B)(e),t[i]={...e.toJSON(),spatialReference:void 0})}};(0,c._)([(0,w.MZ)({types:ej.yR,json:{read:eg.rS,write:!0}})],tD.prototype,"geometry",void 0),(0,c._)([(0,_.K)("geometry")],tD.prototype,"writeGeometry",null),(0,c._)([(0,w.MZ)({json:{write:!0}})],tD.prototype,"rasterId",void 0),(0,c._)([(0,w.MZ)({type:j.A,json:{name:"outSR",write:!0}})],tD.prototype,"outSpatialReference",void 0),(0,c._)([(0,w.MZ)({json:{name:"options.DOff",write:!0}})],tD.prototype,"depthOffset",void 0),(0,c._)([(0,w.MZ)({json:{name:"options.Adjust",write:!0}})],tD.prototype,"adjust",void 0);let tN=tD=(0,c._)([(0,R.$)("esri.rest.support.ImageToMapParameters")],tD),tT=class extends h.A.ClonableMixin(C.A){constructor(){super(...arguments),this.referenceUri=null,this.rasterId=null}};(0,c._)([(0,w.MZ)({type:String,json:{name:"uri",write:!0}})],tT.prototype,"referenceUri",void 0),(0,c._)([(0,w.MZ)({type:Number,json:{write:!0}})],tT.prototype,"rasterId",void 0);let tj=tT=(0,c._)([(0,R.$)("esri.rest.support.ImageUrlParameters")],tT),tP=class extends C.A{constructor(){super(...arguments),this.url=null}};(0,c._)([(0,w.MZ)({json:{name:"imageURL",write:!0}})],tP.prototype,"url",void 0);let tZ=tP=(0,c._)([(0,R.$)("esri.rest.support.ImageUrlResult")],tP),tO=new eP.J({0:"constant",1:"plane",2:"minimum",3:"maximum",4:"average"},{useNumericKeys:!0}),tC=class extends h.A.ClonableMixin(C.A){constructor(){super(...arguments),this.geometries=[],this.mosaicRule=null,this.pixelSize=null,this.constantZ=null,this.baseType="plane"}writeGeometries(e,t,i){e?.length&&(t.geometryType=(0,eg.$B)(e[0]),t.geometries=e.map(e=>e.toJSON()))}};(0,c._)([(0,w.MZ)({types:[ej.yR]})],tC.prototype,"geometries",void 0),(0,c._)([(0,_.K)("geometries")],tC.prototype,"writeGeometries",null),(0,c._)([(0,w.MZ)({type:Y.A,json:{write:!0}})],tC.prototype,"mosaicRule",void 0),(0,c._)([(0,w.MZ)({type:ev.A,json:{write:!0}})],tC.prototype,"pixelSize",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],tC.prototype,"constantZ",void 0),(0,c._)([(0,w.MZ)({type:tO.apiValues,json:{read:tO.read,write:tO.write}})],tC.prototype,"baseType",void 0);let tV=tC=(0,c._)([(0,R.$)("esri.rest.support.ImageVolumeParameters")],tC),tJ=class extends C.A{constructor(){super(...arguments),this.area=null,this.cut=null,this.fill=null,this.maxZ=null,this.minZ=null,this.meanZ=null,this.cutCellCount=null,this.fillCellCount=null}};(0,c._)([(0,w.MZ)({json:{write:!0}})],tJ.prototype,"area",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],tJ.prototype,"cut",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],tJ.prototype,"fill",void 0),(0,c._)([(0,w.MZ)({json:{name:"maxz",write:!0}})],tJ.prototype,"maxZ",void 0),(0,c._)([(0,w.MZ)({json:{name:"minz",write:!0}})],tJ.prototype,"minZ",void 0),(0,c._)([(0,w.MZ)({json:{name:"meanz",write:!0}})],tJ.prototype,"meanZ",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],tJ.prototype,"cutCellCount",void 0),(0,c._)([(0,w.MZ)({json:{write:!0}})],tJ.prototype,"fillCellCount",void 0);let tE=tJ=(0,c._)([(0,R.$)("esri.rest.support.ImageVolume")],tJ),tq=class extends C.A{constructor(){super(...arguments),this.volumes=[]}};(0,c._)([(0,w.MZ)({type:[tE],json:{write:!0}})],tq.prototype,"volumes",void 0);let tG=tq=(0,c._)([(0,R.$)("esri.rest.support.ImageVolumeResult")],tq),tz=class extends h.A.ClonableMixin(C.A){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.visibleOnly=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,eg.$B)(e),t[i]=JSON.stringify(e))}};(0,c._)([(0,w.MZ)({types:ej.yR,json:{read:eg.rS,write:!0}})],tz.prototype,"geometry",void 0),(0,c._)([(0,_.K)("geometry")],tz.prototype,"writeGeometry",null),(0,c._)([(0,w.MZ)({json:{write:!0}})],tz.prototype,"rasterId",void 0),(0,c._)([(0,w.MZ)({json:{name:"options.VisibleOnly",write:!0}})],tz.prototype,"visibleOnly",void 0);let t$=tz=(0,c._)([(0,R.$)("esri.rest.support.MapToImageParameters")],tz),tL=class extends C.A{constructor(){super(...arguments),this.geometry=null,this.length=null,this.area=null,this.center=null}readCenter(e,t){return e.spatialReference||(e={...e,spatialReference:t.Shape.spatialReference}),ev.A.fromJSON(e)}};(0,c._)([(0,w.MZ)({types:ej.yR,json:{name:"Shape",read:eg.rS,write:!0}})],tL.prototype,"geometry",void 0),(0,c._)([(0,w.MZ)({json:{name:"Length",write:!0}})],tL.prototype,"length",void 0),(0,c._)([(0,w.MZ)({json:{name:"Area",write:!0}})],tL.prototype,"area",void 0),(0,c._)([(0,w.MZ)({type:ev.A,json:{name:"Center",write:!0}})],tL.prototype,"center",void 0),(0,c._)([(0,D.w)("center")],tL.prototype,"readCenter",null);let tU=tL=(0,c._)([(0,R.$)("esri.rest.support.MeasureAreaFromImageResult")],tL),tB=m=class extends C.A{constructor(){super(...arguments),this.geometry=null,this.rasterId=void 0}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,eg.$B)(e),t[i]={...e.toJSON(),spatialReference:void 0})}clone(){let e=(0,M.o8)({geometry:this.geometry,rasterId:this.rasterId});return new m(e)}};(0,c._)([(0,w.MZ)({types:ej.yR,json:{name:"fromGeometry",read:eg.rS,write:!0}})],tB.prototype,"geometry",void 0),(0,c._)([(0,_.K)("geometry")],tB.prototype,"writeGeometry",null),(0,c._)([(0,w.MZ)({json:{write:!0}})],tB.prototype,"rasterId",void 0);let tH=tB=m=(0,c._)([(0,R.$)("esri.rest.support.MeasureFromImageParameters")],tB),tQ=class extends C.A{constructor(){super(...arguments),this.geometry=null,this.length=null}};(0,c._)([(0,w.MZ)({types:ej.yR,json:{name:"Shape",read:eg.rS,write:!0}})],tQ.prototype,"geometry",void 0),(0,c._)([(0,w.MZ)({json:{name:"Length",write:!0}})],tQ.prototype,"length",void 0);let tk=tQ=(0,c._)([(0,R.$)("esri.rest.support.MeasureLengthFromImageResult")],tQ);function tK(e){let t=e?.time;if(t&&(null!=t.start||null!=t.end)){let i=[];null!=t.start&&i.push(t.start),null==t.end||i.includes(t.end)||i.push(t.end),e.time=i.join(",")}}async function tW(e,t,i){t=(0,F.PZ)(ta.A,t);let r=(0,ew.Dl)(e),s=t.geometry?[t.geometry]:[],n=await (0,ef.el)(s),a=t.toJSON();tK(a);let o=n?.[0];null!=o&&(a.geometry=ir(o));let l=(0,ew.lF)({...r.query,f:"json",...a});return(0,ew.jV)(l,i)}async function tX(e,t,i){let r=(t=(0,F.PZ)(tV,t)).toJSON();r.geometries=JSON.stringify(r.geometries);let s=(0,ew.Dl)(e),n=(0,ew.lF)({...s.query,f:"json",...r}),a=(0,ew.jV)(n,i),{data:o}=await (0,I.A)(`${s.path}/calculateVolume`,a);return tG.fromJSON({volumes:o.results})}async function tY(e,t,i){let r=(t=(0,F.PZ)(eF,t)).toJSON();null!=r.angleName&&(r.angleName=r.angleName.join(",")),t?.point?.spatialReference?.imageCoordinateSystem&&(r.point.spatialReference=is(t.point.spatialReference)),t?.spatialReference?.imageCoordinateSystem&&(r.spatialReference=ia(t.spatialReference));let s=(0,ew.Dl)(e),n=(0,ew.lF)({...s.query,f:"json",...r}),a=(0,ew.jV)(n,i),{data:o}=await (0,I.A)(`${s.path}/computeAngles`,a);return o.spatialReference=o.spatialReference?null!=o.spatialReference.geodataXform?new j.A({wkid:0,imageCoordinateSystem:o.spatialReference}):j.A.fromJSON(o.spatialReference):null,"NaN"===o.north&&(o.north=null),"NaN"===o.up&&(o.up=null),new eN(o)}async function t0(e,t,i){let r=(t=(0,F.PZ)(td,t)).toJSON(),{geometries:s}=t;if(s)for(let e=0;e<s.length;e++)s[e].spatialReference?.imageCoordinateSystem&&(r.geometries.geometries[e].spatialReference=is(s[e].spatialReference));let n=(0,ew.Dl)(e),a=(0,ew.lF)({...n.query,f:"json",...r}),o=(0,ew.jV)(a,i),{data:l}=await (0,I.A)(`${n.path}/computePixelLocation`,o);return ty.fromJSON(l)}async function t1(e,t,i){let r=await tW(e,t,i),s=(0,ew.Dl)(e),{data:n}=await (0,I.A)(`${s.path}/computeStatisticsHistograms`,r),{statistics:a}=n;return a?.length&&a.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:a,histograms:n.histograms}}async function t2(e,t,i){let r=await tW(e,t,i),s=(0,ew.Dl)(e),{data:n}=await (0,I.A)(`${s.path}/computeHistograms`,r);return{histograms:n.histograms}}async function t3(e,t,i){let r=(t=(0,F.PZ)(tb,t)).toJSON();tK(r),r.outFields?.length&&(r.outFields=r.outFields.join(","));let s=await (0,ef.el)(t.geometry),n=s?.[0];null!=n&&(r.geometry=ir(n));let a=(0,ew.Dl)(e),o=(0,ew.lF)({...a.query,f:"json",...r}),l=(0,ew.jV)(o,i),{data:u}=await (0,I.A)(`${a.path}/getSamples`,l),p=u.samples.map(e=>{let t="NaN"===e.value||""===e.value?null:e.value.split(" ").map(e=>Number(e));return{...e,pixelValue:t}});return tA.fromJSON({samples:p})}async function t8(e,t,i){t=(0,F.PZ)(tl,t);let r=(0,ew.Dl)(e),s=t.geometry?[t.geometry]:[];return(0,ef.el)(s).then(e=>{let s=t.toJSON(),n=e?.[0];null!=n&&(s.geometry=JSON.stringify(ir(n)));let a=(0,ew.lF)({...r.query,f:"json",...s}),o=(0,ew.jV)(a,i);return(0,I.A)(r.path+"/identify",o)}).then(e=>tm.fromJSON(e.data))}async function t4(e,t,i){t=(0,F.PZ)(tr,t);let r=await t7(e,t,[t.fromGeometry,t.toGeometry],i);return tn.fromJSON(r)}async function t6(e,t,i){t=(0,F.PZ)(ez,t);let r=await t7(e,t,[t.geometry],i);return eB.fromJSON(r)}async function t5(e,t,i){t=(0,F.PZ)(tf,t);let r=await t7(e,t,[t.geometry],i);return tv.fromJSON(r)}async function t9(e,t,i){t=(0,F.PZ)(eX,t);let r=await t7(e,t,[t.fromGeometry,t.toGeometry],i);return e0.fromJSON(r)}async function t7(e,t,i,r){let s=(0,ew.Dl)(e),n=await (0,ef.el)(i),a=t.toJSON();null!=n[0]&&(a.fromGeometry=JSON.stringify(ir(n[0]))),null!=n[1]&&(a.toGeometry=JSON.stringify(ir(n[1])));let o=(0,ew.lF)({...s.query,f:"json",...a}),l=(0,ew.jV)(o,r),{data:u}=await (0,I.A)(s.path+"/measure",l);return u}async function ie(e,t,i){let r=await ii(e,t,i);return tk.fromJSON(r)}async function it(e,t,i){let r=await ii(e,t,i);return tU.fromJSON(r)}async function ii(e,t,i){t=(0,F.PZ)(tH,t);let r=(0,ew.Dl)(e),s=t.toJSON(),n=(0,ew.lF)({...r.query,f:"json",...s}),a=(0,ew.jV)(n,i),{data:o}=await (0,I.A)(r.path+"/measureFromImage",a);return o}function ir(e){let t=e.toJSON();return e.spatialReference?.imageCoordinateSystem&&(t.spatialReference=is(e.spatialReference)),t}function is(e){let{imageCoordinateSystem:t}=e;if(t){let{id:e,referenceServiceName:i}=t;return null!=e?i?{icsid:e,icsns:i}:{icsid:e}:{ics:t}}return e.toJSON()}function ia(e,t){if(!e.imageCoordinateSystem)return(0,P.YX)(e);let i=is(e),{icsid:r,icsns:s}=i;return null!=r&&(null==s||t?.toLowerCase().includes("/"+s.toLowerCase()+"/"))?`0:${r}`:JSON.stringify(i)}async function io(e,t,i){t=(0,F.PZ)(eQ,t);let r=(0,ew.Dl)(e),s=t.toJSON();t.outSpatialReference&&(s.outSR=ia(t.outSpatialReference));let n=(0,ew.lF)({...r.query,f:"json",...s}),a=(0,ew.jV)(n,i),{data:o}=await (0,I.A)(r.path+"/queryBoundary",a);return eK.fromJSON(o)}async function il(e,t,i){let r=(t=(0,F.PZ)(e4,t)).toJSON();tK(r),r.objectIds?.length&&(r.objectIds=r.objectIds.join(",")),r.geometry||r.objectIds||r.time||r.where||(r.where="1=1");let s=await (0,ef.el)(t.geometry),n=s?.[0];null!=n&&(r.geometry=ir(n));let a=n?.spatialReference??t.geometry?.spatialReference;a&&(r.inSR=ia(a));let o=(0,ew.Dl)(e),l=(0,ew.lF)({...o.query,f:"json",...r}),u=(0,ew.jV)(l,i),{data:p}=await (0,I.A)(`${o.path}/queryGPSInfo`,u);return tt.fromJSON(p)}async function iu(e,t,i){let r=(t=(0,F.PZ)(tN,t)).toJSON();t.geometry.spatialReference.imageCoordinateSystem&&(r.geometry=ir(t.geometry)),t.depthOffset&&t.adjust||delete r.options;let s=(0,ew.Dl)(e),n=(0,ew.lF)({...s.query,f:"json",...r}),a=(0,ew.jV)(n,i),{data:o}=await (0,I.A)(`${s.path}/imageToMap`,a);return(0,eg.rS)(o)}async function ip(e,t,i){let r=(t=(0,F.PZ)(tF,t)).toJSON();t.rasterIds?.length&&(r.rasterIds=t.rasterIds.join(","));let s=(0,ew.Dl)(e),n=(0,ew.lF)({...s.query,f:"json",...r}),a=(0,ew.jV)(n,i),{data:o}=await (0,I.A)(`${s.path}/imageToMapMultiray`,a);return(0,eg.rS)(o)}async function im(e,t,i){let r=(t=(0,F.PZ)(t$,t)).toJSON(),s=await (0,ef.el)(t.geometry),n=s?.[0];null!=n&&(r.geometry=ir(n)),t.visibleOnly||delete r.options;let a=n?.spatialReference??t.geometry?.spatialReference;a&&(r.inSR=ia(a));let o=(0,ew.Dl)(e),l=(0,ew.lF)({...o.query,f:"json",...r}),u=(0,ew.jV)(l,i),{data:p}=await (0,I.A)(`${o.path}/mapToImage`,u);return(0,eg.rS)(p)}async function ic(e,t,i){let r=(t=(0,F.PZ)(tj,t)).toJSON(),s=(0,ew.Dl)(e),n=(0,ew.lF)({...s.query,f:"json",...r}),a=(0,ew.jV)(n,i),{data:o}=await (0,I.A)(`${s.path}/getImageUrl`,a);return tZ.fromJSON(o)}async function id(e,t,i){let r=(t=(0,F.PZ)(e_,t)).toJSON(),s=await (0,ef.el)([t.fromGeometry,t.toGeometry]);null!=s[0]&&(r.fromGeometry=ir(s[0]),s[0].spatialReference&&(r.inSR=ia(s[0].spatialReference))),null!=s[1]&&(r.toGeometry=ir(s[1])),t.objectIds?.length&&(r.objectIds=r.objectIds.join(","));let n=(0,ew.Dl)(e),a=(0,ew.lF)({...n.query,f:"json",...r}),o=(0,ew.jV)(a,i),{data:l}=await (0,I.A)(`${n.path}/find`,o);return eA.fromJSON(l)}var ih=i(71270),iy=i(8946);async function ig(e,t,i){let r=(0,ew.Dl)(e),s=(0,ew.lF)({...r?.query,f:"json"}),n=(0,ew.jV)(s,i),a=`${r?.path}/${t}/info`,o=(0,I.A)(`${a}`,n),l=(0,I.A)(`${a}/keyProperties`,n),u=await Promise.allSettled([o,l]),p="fulfilled"===u[0].status?u[0].value.data:null,m="fulfilled"===u[1].status?u[1].value.data:null,c=null;p.statistics?.length&&(c=p.statistics.map(e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]})));let d=N.A.fromJSON(p.extent),h=Math.ceil(d.width/p.pixelSizeX-.1),y=Math.ceil(d.height/p.pixelSizeY-.1),g=d.spatialReference,f=new ev.A({x:p.pixelSizeX,y:p.pixelSizeY,spatialReference:g}),w=p.histograms?.length?p.histograms:null,v=new iy.A({origin:p.origin,blockWidth:p.blockWidth,blockHeight:p.blockHeight,firstPyramidLevel:p.firstPyramidLevel,maximumPyramidLevel:p.maxPyramidLevel});return new el.A({width:h,height:y,bandCount:p.bandCount,extent:d,spatialReference:g,pixelSize:f,pixelType:p.pixelType.toLowerCase(),statistics:c,histograms:w,keyProperties:m,storageInfo:v})}var iw=i(53562),iv=i(8019),iR=i(21170),i_=i(86099),ib=i(37810);let iS=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),iI=(0,F.Qp)(F.GB,{min:0,max:255}),iM=e=>{let t=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new et({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){let e=new Map;return!this.rasterFunctionInfos||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.length<1||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replaceAll(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(e=>"number"==typeof e))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,i){null!=e&&"lerc"!==this.format&&(t[i]=e)}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?Y.A.fromJSON(t):null}get fieldsIndex(){return this.fields?new er.A(this.fields):null}set format(e){e&&iS.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t?.mosaicMethod&&(t=Y.A.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){let i=e||t.mosaicRule;return i?Y.A.fromJSON(i):this._isMosaicRuleSupported(t)?Y.A.fromJSON(t):null}writeMosaicRule(e,t,i){let{mosaicRule:r}=this;this._isValidCustomizedMosaicRule(r)&&(t[i]=r.toJSON())}writeNoData(e,t,i){null!=e&&"number"==typeof e&&(t[i]=iI(e))}readObjectIdField(e,t){if(!e){let i=t.fields.find(e=>"esriFieldTypeOID"===e.type||"oid"===e.type);e=i?.name}return e}get parsedUrl(){return(0,x.An)(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}get renderer(){let{activePresetRendererName:e,presetRenderers:t}=this;if(e){let i=t?.find(({name:t})=>t===e);return i?.renderer.clone()}return this.internalRenderer}set renderer(e){this.activePresetRendererName=null,this.internalRenderer=e}set internalRenderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("internalRenderer",e)}readRenderer(e,t,i){let r=t?.layerDefinition?.drawingInfo?.renderer,s=(0,ey.LF)(r,i);return null==s?null:("vector-field"===s.type&&t.symbolTileSize&&!r.symbolTileSize&&(s.symbolTileSize=t.symbolTileSize),B(s)||v.A.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),s)}writeRenderer(e,t,i){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){let e=this.fields?.map(e=>e.clone())??[];e.push((0,eo.rZ)()),"mosaic-dataset"===this.sourceType&&this.fields?.length&&e.push((0,eo.Nd)()),this.version>=10.4&&null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.some(({name:e})=>"none"===e.toLowerCase())&&e.push((0,eo.dy)()),null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.filter(({name:e})=>"none"!==e.toLowerCase()).forEach(({name:t})=>e.push((0,eo.nq)(t)));let{rasterInfo:t}=this;if(this._isVectorDataSet()){let i=t?.multidimensionalInfo?.variables[0].unit?.trim(),r=(0,eo.DV)(i),s=(0,eo.y6)();e.push(r,s)}if(t?.multidimensionalInfo&&"raster-dataset"===this.sourceType){let i=(0,eo.AL)(t.multidimensionalInfo);e.push(...i)}let i=t?.attributeTable;if(null!=i){let t=(0,eo.jC)(i);e.push(...t)}return e}set rasterFunction(e){let t=e;t?.rasterFunction&&(t=V.A.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}readRasterFunction(e,t){let i=t.rasterFunctionInfos;return t.renderingRule||i?.length&&"None"!==i[0].name?this._isRFTJson(t.renderingRule)?V.A.fromJSON({rasterFunctionDefinition:t.renderingRule}):V.A.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}readSpatialReference(e,t){let i=e||t.extent.spatialReference;return i?j.A.fromJSON(i):null}writePixelType(e,t,i){null!=this.serviceRasterInfo&&this.pixelType===this.serviceRasterInfo.pixelType||(t[i]=ee.e8.toJSON(e))}readVersion(e,t){let i=t.currentVersion;return i||(i=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),i}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let i=e,{renderer:r,symbolizer:s,pixelFilter:n,bandIds:a}=this;if(!this._isPicture()&&r&&s&&!n){let n=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(r.toJSON()),o=this._rasterJobHandler.instance;if(o){n&&(s.bind(),await o.updateSymbolizer(s,t),this._cachedRendererJson=r.toJSON());let l=await o.symbolize({bandIds:a,...e},t);i={extent:e.extent,pixelBlock:l}}else i={extent:e.extent,pixelBlock:s.symbolize({bandIds:a,...e})}}return i}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async calculateVolume(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsCalculateVolume)throw new y.A("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=(0,M.o8)(e),this.mosaicRule&&null==e.mosaicRule&&(e.mosaicRule=this.mosaicRule),tX(this.url,e,this._getRequestOptions(t))}async computeAngles(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeAngles)throw new y.A("imagery-layer:compute-angles","this operation is not supported on the input image service");return tY(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputePixelLocation)throw new y.A("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return t0(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeHistograms)throw new y.A("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=(0,M.o8)(e),this._applyMosaicAndRenderingRules(e),t2(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeStatisticsHistograms)throw new y.A("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=(0,M.o8)(e),this._applyMosaicAndRenderingRules(e),t1(this.url,e,this._getRequestOptions(t))}async measureHeight(e,t){let i=await this._fetchCapabilities(t?.signal);if(!("base-and-top"===e.operationType?i.mensuration.supportsHeightFromBaseAndTop:"base-and-top-shadow"===e.operationType?i.mensuration.supportsHeightFromBaseAndTopShadow:i.mensuration.supportsHeightFromTopAndTopShadow))throw new y.A("imagery-layer:measure-height","this operation is not supported on the input image service");return e=(0,M.o8)(e),this._applyMosaicRule(e),t4(this.url,e,this._getRequestOptions(t))}async measureAreaAndPerimeter(e,t){let i=await this._fetchCapabilities(t?.signal);if(!(i.mensuration.supportsAreaAndPerimeter&&(!e.is3D||i.mensuration.supports3D)))throw new y.A("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=(0,M.o8)(e),this._applyMosaicRule(e),t6(this.url,e,this._getRequestOptions(t))}async measureDistanceAndAngle(e,t){let i=await this._fetchCapabilities(t?.signal);if(!(i.mensuration.supportsDistanceAndAngle&&(!e.is3D||i.mensuration.supports3D)))throw new y.A("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=(0,M.o8)(e),this._applyMosaicRule(e),t9(this.url,e,this._getRequestOptions(t))}async measurePointOrCentroid(e,t){let i=await this._fetchCapabilities(t?.signal);if(!(i.mensuration.supportsPointOrCentroid&&(!e.is3D||i.mensuration.supports3D)))throw new y.A("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=(0,M.o8)(e),this._applyMosaicRule(e),t5(this.url,e,this._getRequestOptions(t))}async measureLengthFromImage(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsMeasureFromImage)throw new y.A("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if("polyline"!==e.geometry.type)throw new y.A("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return ie(this.url,e,this._getRequestOptions(t))}async measureAreaFromImage(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsMeasureFromImage)throw new y.A("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if("polygon"!==e.geometry.type)throw new y.A("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return it(this.url,e,this._getRequestOptions(t))}getField(e){let{fieldsIndex:t}=this;return null!=t?t.get(e):void 0}getFieldDomain(e,t){let i=this.getField(e);return i?i.domain:null}async fetchImage(e,t,r,s={}){if(null==e||null==t||null==r)throw new y.A("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){let e=await this._generateRasterInfo(this.rasterFunction,{signal:s.signal});e&&(this.rasterInfo=e)}let n=this.getExportImageServiceParameters(e,t,r,s.timeExtent);if(null==n){if(s.requestAsImageElement&&this._canRequestImageElement(this.format)){let e=document.createElement("canvas");return(e.width=t,e.height=r,s.returnImageBitmap)?{imageBitmap:await (0,es.m)(e,`${i(this.parsedUrl)}/exportImage`,s.signal)}:{imageOrCanvasElement:e}}let{bandIds:n,rasterInfo:a}=this,o=(n?.length||a.bandCount)??0,l=t*r,u=a.pixelType,p=[];for(let e=0;e<o;e++)p.push(ea.A.createEmptyBand(u,l));return{pixelData:{pixelBlock:new ea.A({width:t,height:r,pixels:p,mask:new Uint8Array(l),pixelType:u}),extent:e}}}let a=!!s.requestAsImageElement&&!this.pixelFilter,o=a&&!!s.returnImageBitmap,l={imageServiceParameters:n,imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:a,returnImageBitmap:o,signal:s.signal};return this._requestArrayBuffer(l)}fetchKeyProperties(e){return(0,I.A)(i(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then(e=>e.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new y.A("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,I.A)(i(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then(e=>tu.A.fromJSON(e.data))}getCatalogItemRasterInfo(e,t){let r={...t,query:this._getQueryParams()};return ig(i(this.parsedUrl),e,r)}async getCatalogItemICSInfo(e,t){let{data:r}=await (0,I.A)(i(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),s=r?.ics;if(!s)return;let n=null;try{n=(await (0,I.A)(i(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!n?.spatialReference)return{ics:s,icsToPixelTransform:null,icsExtent:null,northDirection:null};let a=this.version>=10.7?(0,I.A)(i(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then(e=>e.data).catch(()=>({})):{},o=n.spatialReference,l={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[n]}),inSR:(0,P.YX)(o),outSR:"0:"+e},u=(0,I.A)(i(this.parsedUrl)+"/project",{query:this._getQueryParams(l),...t}).then(e=>e.data).catch(()=>({})),p=(n.xmin+n.xmax)/2,m=(n.ymax-n.ymin)/6,c=n.ymin+m,d=[];for(let e=0;e<5;e++)d.push({x:p,y:c+m*e});let h={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:d}),inSR:(0,P.YX)(o),outSR:"0:"+e},y=(0,I.A)(i(this.parsedUrl)+"/project",{query:this._getQueryParams(h),...t}).then(e=>e.data).catch(()=>({})),g=await Promise.all([a,u,y]),f=g[0].ipxf;if(null==f){let e=s.geodataXform?.xf_0;"topup"===e?.name?.toLowerCase()&&6===e?.coefficients?.length&&(f={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}let w=N.A.fromJSON(g[1]?.geometries?.[0]);w&&(w.spatialReference=new j.A({wkid:0,imageCoordinateSystem:s}));let v=g[2].geometries?g[2].geometries.filter(e=>null!=e?.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y):[],R=v.length;if(R<3)return{ics:s,icsToPixelTransform:f,icsExtent:w,northDirection:null};let _=0,b=0,S=0,M=0;for(let e=0;e<R;e++)_+=v[e].x,b+=v[e].y,S+=v[e].x*v[e].x,M+=v[e].x*v[e].y;let A=(R*M-_*b)/(R*S-_*_),x=0,F=v[4].x>v[0].x,D=v[4].y>v[0].y;return A===1/0?x=D?90:270:0===A?x=180*!F:A>0?x=F?180*Math.atan(A)/Math.PI:180*Math.atan(A)/Math.PI+180:A<0&&(x=D?180+180*Math.atan(A)/Math.PI:360+180*Math.atan(A)/Math.PI),{ics:s,icsToPixelTransform:f,icsExtent:w,northDirection:x}}async generateRasterInfo(e,t){e=(0,F.PZ)(V.A,e);let r={...t,query:this._getQueryParams()};if(!e||"none"===e.functionName?.toLowerCase()||this._isVectorFieldResampleFunction(e))return this.serviceRasterInfo??(0,ih.Tw)(i(this.parsedUrl),this.sourceJSON,r);let s=function(e){let t=JSON.stringify(e),i=t.includes('"rasterFunctionDefinition":{'),r=i?t.match(/"type":"(.*?FunctionArguments")/gi):t.match(/"rasterFunction":"(.*?")/gi),s=r?.map(e=>i?e.slice(8,-18):e.slice(18,-1));return s?s.join("/"):null}(e);if(!s)throw new y.A("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[s])return this._functionRasterInfos[s];let n=(0,ih.X6)(i(this.parsedUrl),e,r);this._functionRasterInfos[s]=n;try{return await n}catch(e){throw this._functionRasterInfos[s]=null,e}}getExportImageServiceParameters(e,t,r,s){let n=ia((e=e.clone().shiftCentralMeridian()).spatialReference,i(this.parsedUrl)),a=this.exportImageServiceParameters.toJSON(),{bandIds:o,noData:l}=a,{renderingRule:u}=a,p=this.rasterFunction?.rasterFunctionDefinition,m=this.renderer?.type,c=!m||"raster-stretch"===m||"raster-colormap"===m||"unique-value"===m||"class-breaks"===m||"raster-shaded-relief"===m;if(o?.length&&this._hasRasterFunction(this.rasterFunction)&&!p&&c){let e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:o}};if("Stretch"===u.rasterFunction)e.rasterFunctionArguments.Raster=u.rasterFunctionArguments.Raster,u.rasterFunctionArguments.Raster=e;else if("Colormap"===u.rasterFunction){let t=u.rasterFunctionArguments.Raster;"Stretch"===t?.rasterFunction?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,u.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=u,u=e;a.bandIds=void 0}else a.bandIds=o?.join(",");Array.isArray(l)&&l.length>0&&(a.noData=l.join(","));let d=this._processMultidimensionalIntersection(null,s,this.exportImageServiceParameters.mosaicRule);if(d.isOutSide)return null;a.mosaicRule=null!=d.mosaicRule?JSON.stringify(d.mosaicRule):null,s=d.timeExtent,a.renderingRule=this._getRenderingRuleString(V.A.fromJSON(u));let h={};if(null!=s){let{start:e,end:t}=s.toJSON();e&&t&&e===t?h.time=""+e:null==e&&null==t||(h.time=`${e??"null"},${t??"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:n,imageSR:n,size:t+","+r,...a,...h}}async getSamples(e,t){let i=await this._fetchCapabilities(t?.signal);if(!i?.operations.supportsGetSamples)throw new y.A("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=(0,M.o8)(e);let{raster:r}=this;return r&&null==e.raster&&(e.raster=r),t3(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsIdentify)throw new y.A("imagery-layer:identify","identify operation is not supported on the input image service");e=(0,M.o8)(e),this.version<10.91&&"extent"===e.geometry?.type&&(e.geometry=T.A.fromExtent(e.geometry));let i=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(i.isOutSide)throw new y.A("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=i.timeExtent,e.mosaicRule=i.mosaicRule;let{raster:r,rasterFunction:s}=this;return s&&null==e.rasterFunction&&(e.rasterFunction=s),r&&null==e.raster&&(e.raster=r),t8(this.url,e,this._getRequestOptions(t))}async imageToMap(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsImageToMap)throw new y.A("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return iu(i(this.parsedUrl),e,this._getRequestOptions(t))}async imageToMapMultiray(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsImageToMapMultiray)throw new y.A("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return ip(i(this.parsedUrl),e,this._getRequestOptions(t))}async mapToImage(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsMapToImage)throw new y.A("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return im(i(this.parsedUrl),e,this._getRequestOptions(t))}async findImages(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsFindImages)throw new y.A("imagery-layer:find-images","findImages operation is not supported on the input image service");return id(i(this.parsedUrl),e,this._getRequestOptions(t))}async getImageUrl(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsGetImageUrl)throw new y.A("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return ic(i(this.parsedUrl),e,this._getRequestOptions(t))}createQuery(){return new i_.A({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}async queryBoundary(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQueryBoundary)throw new y.A("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return e=e??{outSpatialReference:this.spatialReference},io(i(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasters(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),(0,iR.s)(this.url,e,t)}async queryObjectIds(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),(0,iv.V)(this.url,e,t)}async queryGPSInfo(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQueryGPSInfo)throw new y.A("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return e=e??{where:"1=1"},il(i(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasterCount(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),(0,iw.I)(this.url,e,t)}async queryVisibleRasters(e,t){if(!e)throw new y.A("imagery-layer: query-visible-rasters","missing query parameter");await this.load();let{pixelSize:i,returnDomainValues:r,returnTopmostRaster:s,showNoDataRecords:n}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1},a=!1,o=null,l=null,u=eo.F_.servicePixelValue.toLowerCase(),p=this._rasterFunctionNamesIndex;if(null!=e.outFields&&(a=e.outFields.some(e=>!e.toLowerCase().startsWith(u)),this.version>=10.4)){let t=e.outFields.filter(e=>e.toLowerCase().startsWith(u)&&e.length>u.length).map(e=>{let t=e.slice(u.length+1);return[this._updateRenderingRulesFunctionName(t,p),t]});o=t.map(e=>new V.A({functionName:e[0]})),l=t.map(e=>e[1]);let{rasterFunction:i}=this;0===o.length?i?.functionName?(o.push(i),l.push(i.functionName)):o=null:i?.functionName&&!o.some(e=>e.functionName===i.functionName)&&(o.push(i),l.push(i.functionName))}let m=null==e.outSpatialReference||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:c}=this,d=e.timeExtent||this.timeExtent;if(c){let{isOutside:t,intersection:i}=(0,ep.Rp)(c,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:this.exportImageServiceParameters.mosaicRule?.multidimensionalDefinition});if(t)throw new y.A("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");null!=i?.timeExtent&&(d=i.timeExtent)}let h=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,d),g=e.geometry;this.version<10.91&&"extent"===g?.type&&(g=T.A.fromExtent(g));let f=this._getQueryParams({geometry:g,timeExtent:d,mosaicRule:h,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:o,pixelSize:i,returnCatalogItems:a,returnGeometry:m,raster:this.raster,maxItemCount:s?1:null});delete f.f;let w=new tl(f);try{await this._generateRasterInfo(this.rasterFunction);let i=await t8(this.url,w,{signal:t?.signal,query:{...this.customParameters}}),s=e.outFields,o=null!=i.value&&i.value.toLowerCase().includes("nodata"),u=a&&!m&&i?.catalogItems?.features.length&&(n||!o),p=this.multidimensionalInfo&&"raster-dataset"===this.sourceType?(0,ep.XU)({rasterInfo:this.rasterInfo,multidimensionalDefinition:h?.multidimensionalDefinition,timeExtent:d,multidimensionalSubset:this.multidimensionalSubset}):null;if(!u)return this._processVisibleRastersResponse(i,{returnDomainValues:r,templateRRFunctionNames:l,showNoDataRecords:n,templateFields:s,effectiveMultidimensionalDefinition:p});let c=this.objectIdField||"ObjectId",y=i.catalogItems?.features??[],g=y.map(e=>e.attributes?.[c]),f=new i_.A({objectIds:g,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[c]}),v=await this.queryRasters(f);return v?.features?.length&&v.features.forEach(t=>{y.forEach(i=>{i.attributes[c]===t.attributes[c]&&t.geometry&&(i.geometry=t.geometry.clone(),null!=e.outSpatialReference&&(i.geometry.spatialReference=e.outSpatialReference))})}),this._processVisibleRastersResponse(i,{returnDomainValues:r,templateRRFunctionNames:l,showNoDataRecords:n,templateFields:s,effectiveMultidimensionalDefinition:p})}catch{throw new y.A("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){let r=(0,I.A)(i(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then(e=>e.data?.statistics),s=(0,I.A)(i(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then(e=>e.data?.histograms),n=await Promise.all([r,s]);return n[0]&&n[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:n[0]||null,histograms:n[1]||null}}async createFlowMesh(e,t){let i=this._rasterJobHandler.instance;return i?i.createFlowMesh(e,t):(0,ib.CW)(e.meshType,e.simulationSettings,e.flowData,null!=t.signal?t.signal:(new AbortController).signal)}getMultidimensionalSubsetVariables(e){let t=e??this.serviceRasterInfo.multidimensionalInfo;return(0,ep.z2)(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);let t=this.sourceJSON,r=null!=this.serviceRasterInfo?Promise.resolve(this.serviceRasterInfo):(0,ih.Tw)(i(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then(e=>(this._set("serviceRasterInfo",e),this._set("multidimensionalInfo",e.multidimensionalInfo),(0,ih.E9)(e,t),e));return Promise.all([r,this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,this._getRasterFunctionInfos()]).then(e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.internalRenderer&&!this._isSupportedRenderer(this.internalRenderer)&&(this._set("internalRenderer",null),v.A.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("internalRenderer",this._configRenderer(this.renderer)),this.addHandles([(0,A.wB)(()=>this.rasterFunction,e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(e).then(e=>{e&&(this.rasterInfo=e)})})]);let{serviceRasterInfo:t}=this;null!=t.multidimensionalInfo&&this._updateMultidimensionalDefinition(t)})}_combineMosaicRuleWithTimeExtent(e,t){let i=this.timeInfo,{multidimensionalInfo:r}=this.serviceRasterInfo;if(null==e||null==r||null==t||null==i?.startField)return e;let{startField:s}=i,n=r.variables.some(e=>e.dimensions.some(e=>e.name===s))?s:"StdTime";if(e=e.clone(),"mosaic-dataset"===this.sourceType)return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter(e=>e.dimensionName!==n),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];let a=e.multidimensionalDefinition.filter(e=>e.dimensionName===n),o=null!=t.start?t.start.getTime():null,l=null!=t.end?t.end.getTime():null,u=null==o||null==l||o===l,p=u?[o||l]:[[o,l]],m=this.version>=10.8;if(a.length)a.forEach(e=>{e.dimensionName===n&&(m?(e.dimensionName=null,e.isSlice=!1,e.values=[]):(e.isSlice=u,e.values=p))});else if(!m){let t=e.multidimensionalDefinition.filter(e=>null!=e.variableName&&null==e.dimensionName);t.length?t.forEach(e=>{e.dimensionName=n,e.isSlice=u,e.values=p}):e.multidimensionalDefinition.push(new O.A({variableName:"",dimensionName:n,isSlice:u,values:p}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return null==e?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(e=>!(!e.variableName&&!e.dimensionName)),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this.sourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQuery)throw new y.A("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=null!=e?(0,F.PZ)(i_.A,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;let e=new eu.A;this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e},()=>{}),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){let{rasterInfo:t,rasterFunction:i}=this;return"unique-value"===e.type&&this._hasRasterFunction(i)&&1===t?.bandCount&&["u8","s8"].includes(t.pixelType)||null!=t&&null!=e&&(0,ed.fp)(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){let t=this.sourceJSON;if(!t){let{data:r,ssl:s}=await (0,I.A)(i(this.parsedUrl),{query:this._getQueryParams(),signal:e});t=r,this.sourceJSON=t,s&&(this.url=this.url.replace(/^http:/i,"https:"))}if(t.capabilities?.toLowerCase().split(",").map(e=>e.trim()).indexOf("tilesonly")>-1)throw new y.A("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:e.fields?.length>0}_isMosaicRuleSupported(e){if(!e)return!1;let t=this._isMosaicDataset(e),i=e.currentVersion>=10.71&&e.hasMultidimensions&&!(e.fields?.length>1);return t||i}_isVectorFieldResampleFunction(e){if(null==e)return!1;let{functionName:t,functionArguments:i}=e,r="resample"===t?.toLowerCase(),s=i?.ResampleType||i?.resampleType;return r&&(7===s||10===s)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){let t=this._isPicture(),{rasterInfo:i}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){let t=this.mosaicRule?.multidimensionalDefinition?.[0].variableName,r=(0,ed.I8)({variableName:t,rasterFunctionName:this.rasterFunction?.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&i.bandCount>=3){let e=r?.bandIds??(0,ed.ci)(i);e&&(3!==i.bandCount||0!==e[0]||1!==e[1]||2!==e[2])&&(this.bandIds=e)}e||(e=r?.renderer??(0,ed.PD)(i,{bandIds:this.bandIds,variableName:this.rasterFunction?null:t}));let s=(0,ed.$P)(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=s,this.symbolizer.rasterInfo=i):this.symbolizer=new eh.A({rendererJSON:s,rasterInfo:i}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:null!=e.pixelBlock?e.pixelBlock.clone():null}}_getQueryParams(e){null!=e?.renderingRule&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));let{raster:t,viewId:i}=this;return{raster:t,viewId:i,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e?.query,...this.customParameters}}}_decodePixelBlock(e,t,i){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):(0,em.D)(e,t,i)}async _getRasterFunctionInfos(e){let t=this.sourceJSON.rasterFunctionInfos;if(this.loaded)return t;if(t&&this.version>=10.3){if(1===t.length&&"none"===t[0].name.toLowerCase())return t;let r=await (0,I.A)(i(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e});return r.data?.rasterFunctionInfos}return null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){let{imageProps:t,requestAsImageElement:r,returnImageBitmap:s,signal:n}=e;if(r&&this._canRequestImageElement(t.format)){let r=`${i(this.parsedUrl)}/exportImage`,{data:a}=await (0,I.A)(r,{responseType:s?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:n});return a instanceof Blob?{imageBitmap:await (0,es.m)(a,r,n),params:t}:{imageOrCanvasElement:a,params:t}}let a=this._initJobHandler(),o=(0,I.A)(i(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:n}),l=(await Promise.all([o,a]))[0].data,u=t.format||"jpgpng",p=u;if("bsq"!==p&&"bip"!==p&&(p=(0,em.g)(l)),!p)throw new y.A("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(l)));let m={signal:n},c="gif"===u||"bmp"===u||u.includes("png")&&("png"===p||"jpg"===p)?(0,em.D)(l,{useCanvas:!0,...t},m):this._decodePixelBlock(l,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:u},m);return{pixelData:{pixelBlock:await c,extent:t.extent},params:t}}_generateRasterInfo(e,t){return this.generateRasterInfo(e,t).catch(()=>null)}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=(0,ep.fy)(e,{multidimensionalSubset:this.multidimensionalSubset});if(null!=t&&t.length>0){this.mosaicRule=this.mosaicRule||new Y.A;let e=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&"none"!==this.rasterFunction.functionName?.toLowerCase()&&t.forEach(e=>e.variableName=""),t=t.filter(({variableName:e,dimensionName:t})=>e&&"*"!==e||t),!e?.length&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){t=t||{};let i=e.value,{templateRRFunctionNames:r,showNoDataRecords:s,returnDomainValues:n,templateFields:a}=t,o=e.processedValues,l=e.catalogItems?.features,u=e.properties?.Values?.map(e=>e.replaceAll(/ /gi,", "))||[],p=this.objectIdField||"ObjectId",m="string"==typeof i&&i.toLowerCase().includes("nodata"),c=[];if(i&&!l&&!m){let e={};e[p]=0,u=[i],l=[new S.A({geometry:this.fullExtent,attributes:e})],this.multidimensionalInfo&&"raster-dataset"===this.sourceType&&(0,eo.eS)(this.rasterFields,e,t.effectiveMultidimensionalDefinition)}if(!l)return[];this._updateResponseFieldNames(l,a),m&&!s&&(l=[]);let{itemPixelValue:d,servicePixelValue:h}=eo.F_,y=this.rasterFields.some(e=>e.name===d);for(let e=0;e<l.length;e++){let t=l[e];if(null!=i){let n=u[e],a=this.rasterFunction&&o&&o.length>0&&r&&r.length>0&&r.includes(this.rasterFunction.functionName)?o[r.indexOf(this.rasterFunction.functionName)]:i;if("nodata"===n.toLowerCase()&&!s)continue;y&&(t.attributes[d]=n),t.attributes[h]=a,this._updateFeatureWithMagDirValues(t,n);let l=this.fields&&this.fields.length>0,p=this.rasterFunction&&null!=this.serviceRasterInfo.attributeTable?l?n:i:a;this.rasterFunction||(p=l?n:i),this._updateFeatureWithRasterAttributeTableValues(t,p)}if(t.sourceLayer=t.layer=this,n&&this._updateFeatureWithDomainValues(t),r&&o&&r.length===o.length)for(let e=0;e<r.length;e++){let i=`${eo.F_.servicePixelValue}.${r[e]}`;t.attributes[i]=o[e]}c.push(l[e])}return c}_processMultidimensionalIntersection(e,t,i){let{multidimensionalSubset:r}=this;if(!r)return{isOutSide:!1,timeExtent:t,mosaicRule:i=this._combineMosaicRuleWithTimeExtent(i,t)};if(r){let{isOutside:i,intersection:s}=(0,ep.Rp)(r,{geometry:e,timeExtent:t});if(i)return{isOutSide:!0,timeExtent:null,mosaicRule:null};null!=s?.timeExtent&&(t=s.timeExtent)}if(i=this._combineMosaicRuleWithTimeExtent(i,t),i?.multidimensionalDefinition){let{isOutside:e}=(0,ep.Rp)(r,{multidimensionalDefinition:i.multidimensionalDefinition});if(e)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:i}}_updateFeatureWithRasterAttributeTableValues(e,t){let i=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(null==i)return;let{features:r,fields:s}=i,n=s.map(e=>e.name).find(e=>"value"===e.toLowerCase());if(!n)return;let a=r.filter(e=>e.attributes[n]===(null!=t?parseInt(t,10):null));a&&a[0]&&s.forEach(t=>{let i=eo.ER+t.name;e.attributes[i]=a[0].attributes[t.name]})}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;let i=t.split(/,\s*/).map(e=>parseFloat(e)),r=i.map(e=>[e]),s=i.map(e=>({minValue:e,maxValue:e,noDataValue:null})),n=new ea.A({height:1,width:1,pixelType:"f32",pixels:r,statistics:s});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:n,extent:new N.A(0,0,0,0,this.spatialReference)});let a="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[n.pixels[0][0],n.pixels[1][0]]:(0,ec.Lu)([n.pixels[0][0],n.pixels[1][0]]);e.attributes[eo.F_.magnitude]=a[0],e.attributes[eo.F_.direction]=a[1]}_updateFeatureWithDomainValues(e){let t=this.fields&&this.fields.filter(e=>e.domain&&"coded-value"===e.domain.type);null!=t&&t.forEach(t=>{let i=e.attributes[t.name];if(null!=i){let r=t.domain.codedValues.find(e=>e.code===i);r&&(e.attributes[t.name]=r.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;let i=this.fieldsIndex;null!=i&&e.forEach(e=>{if(e?.attributes)for(let r of t){let t=i.get(r)?.name;t&&t!==r&&(e.attributes[r]=e.attributes[t],delete e.attributes[t])}})}_getRenderingRuleString(e){if(e){let t=e.toJSON();return((t=t.rasterFunctionDefinition??t).thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRasterFunction(e){return null!=e?.functionName&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");let i=e.toLowerCase().replaceAll(/ /gi,"_");return t.has(i)?t.get(i):e}_isRFTJson(e){return e?.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_applyMosaicAndRenderingRules(e){let{raster:t,mosaicRule:i,rasterFunction:r}=this;r&&null==e.rasterFunction&&(e.rasterFunction=r),i&&null==e.mosaicRule&&(e.mosaicRule=i),t&&null==e.raster&&(e.raster=t)}_applyMosaicRule(e){let{raster:t,mosaicRule:i}=this;i&&null==e.mosaicRule&&(e.mosaicRule=i),t&&null==e.raster&&(e.raster=t)}_readCapabilities(e){let t=e.capabilities?e.capabilities.toLowerCase().split(",").map(e=>e.trim()):["image","catalog"],{currentVersion:i,advancedQueryCapabilities:r,maxRecordCount:s}=e,n=t.includes("image"),a="esriImageServiceDataTypeElevation"===e.serviceDataType,o=!(!e.spatialReference&&!e.extent?.spatialReference),l=t.includes("edit"),u=t.includes("mensuration")&&o,p=null==e.mensurationCapabilities?[]:e.mensurationCapabilities.toLowerCase().split(",").map(e=>e.trim()),m=u&&p.includes("basic"),c=this._isMosaicDataset(e)&&t.includes("catalog"),d=t.includes("download"),h=i>=10.7&&a||i>=11.4&&(a||u&&p.includes("3d"));return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:n,supportsExportImage:n,supportsIdentify:n,supportsImageToMap:i>=11.2&&c,supportsImageToMapMultiray:i>=11.2&&c,supportsMapToImage:i>=11.2&&c,supportsFindImages:i>=11.2&&c,supportsGetImageUrl:i>=11.3&&d,supportsMeasure:u,supportsMeasureFromImage:i>=11.2,supportsDownload:d,supportsQuery:c&&e.fields&&e.fields.length>0,supportsGetSamples:i>=10.2&&n,supportsProject:i>=10.3&&n,supportsComputeStatisticsHistograms:i>=10.4&&n,supportsQueryBoundary:i>=10.6&&n,supportsCalculateVolume:h,supportsComputePixelLocation:i>=10.7&&c,supportsComputeAngles:i>=10.91,supportsQueryGPSInfo:i>=11.2&&c,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryBins:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:s,maxRecordCountFactor:void 0,supportsStatistics:!!r?.supportsStatistics,supportsOrderBy:!!r?.supportsOrderBy,supportsDistinct:!!r?.supportsDistinct,supportsPagination:!!r?.supportsPagination,supportsStandardizedQueriesOnly:!!r?.useStandardizedQueries,supportsPercentileStatistics:!!r?.supportsPercentileStatistics,supportsCentroid:!!r?.supportsReturningGeometryCentroid,supportsCurrentUser:!1,supportsDistance:!!r?.supportsQueryWithDistance,supportsExtent:!!r?.supportsReturningQueryExtent,supportsGeometryProperties:!!r?.supportsReturningGeometryProperties,supportsHavingClause:!!r?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsReturnMesh:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!r?.supportsDefaultSR,supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0,supportsTrueCurve:!1},mensuration:{supportsDistanceAndAngle:m,supportsAreaAndPerimeter:m,supportsPointOrCentroid:m,supportsHeightFromBaseAndTop:u&&p.includes("base-top height"),supportsHeightFromBaseAndTopShadow:u&&p.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:u&&p.includes("top-top shadow height"),supports3D:u&&p.includes("3d")}}}};function i(e){return e?.path??""}return(0,c._)([(0,w.MZ)({clonable:!1})],t.prototype,"_functionRasterInfos",void 0),(0,c._)([(0,w.MZ)({clonable:!1})],t.prototype,"_rasterJobHandler",void 0),(0,c._)([(0,w.MZ)({clonable:!1})],t.prototype,"_cachedRendererJson",void 0),(0,c._)([(0,w.MZ)({readOnly:!0})],t.prototype,"_serviceSupportsMosaicRule",void 0),(0,c._)([(0,D.w)("_serviceSupportsMosaicRule",["currentVersion","fields"])],t.prototype,"readServiceSupportsMosaicRule",null),(0,c._)([(0,w.MZ)({readOnly:!0})],t.prototype,"_rasterFunctionNamesIndex",null),(0,c._)([(0,w.MZ)()],t.prototype,"adjustAspectRatio",void 0),(0,c._)([(0,w.MZ)({type:[F.jz],json:{write:!0}})],t.prototype,"bandIds",void 0),(0,c._)([(0,D.w)("bandIds")],t.prototype,"readBandIds",null),(0,c._)([(0,w.MZ)({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),(0,c._)([(0,D.w)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),(0,c._)([(0,w.MZ)({type:Number})],t.prototype,"compressionQuality",void 0),(0,c._)([(0,_.K)("compressionQuality")],t.prototype,"writeCompressionQuality",null),(0,c._)([(0,w.MZ)({type:Number})],t.prototype,"compressionTolerance",void 0),(0,c._)([(0,_.K)("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),(0,c._)([(0,w.MZ)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,c._)([(0,w.MZ)({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],t.prototype,"defaultMosaicRule",void 0),(0,c._)([(0,D.w)("defaultMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultMosaicRule",null),(0,c._)([(0,w.MZ)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],t.prototype,"definitionExpression",void 0),(0,c._)([(0,w.MZ)({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),(0,c._)([(0,w.MZ)()],t.prototype,"rasterInfo",void 0),(0,c._)([(0,w.MZ)({readOnly:!0,type:[ei.A]})],t.prototype,"fields",void 0),(0,c._)([(0,w.MZ)({readOnly:!0})],t.prototype,"fieldsIndex",null),(0,c._)([(0,w.MZ)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],t.prototype,"format",null),(0,c._)([(0,D.w)("service","format",["serviceDataType"])],t.prototype,"readFormat",null),(0,c._)([(0,w.MZ)({type:N.A})],t.prototype,"fullExtent",void 0),(0,c._)([(0,w.MZ)({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),(0,c._)([(0,w.MZ)({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),(0,c._)([(0,w.MZ)({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),(0,c._)([(0,w.MZ)({type:String,json:{type:ee.SZ.jsonValues,read:ee.SZ.read,write:ee.SZ.write}})],t.prototype,"interpolation",void 0),(0,c._)([(0,w.MZ)()],t.prototype,"minScale",void 0),(0,c._)([(0,D.w)("service","minScale")],t.prototype,"readMinScale",null),(0,c._)([(0,w.MZ)()],t.prototype,"maxScale",void 0),(0,c._)([(0,D.w)("service","maxScale")],t.prototype,"readMaxScale",null),(0,c._)([(0,w.MZ)({type:Y.A})],t.prototype,"mosaicRule",null),(0,c._)([(0,D.w)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),(0,c._)([(0,_.K)("mosaicRule")],t.prototype,"writeMosaicRule",null),(0,c._)([(0,w.MZ)()],t.prototype,"multidimensionalInfo",void 0),(0,c._)([(0,w.MZ)({type:en.A,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),(0,c._)([(0,w.MZ)({json:{type:F.jz}})],t.prototype,"noData",void 0),(0,c._)([(0,_.K)("noData")],t.prototype,"writeNoData",null),(0,c._)([(0,w.MZ)({type:String,json:{type:ee.hm.jsonValues,read:ee.hm.read,write:ee.hm.write}})],t.prototype,"noDataInterpretation",void 0),(0,c._)([(0,w.MZ)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),(0,c._)([(0,D.w)("objectIdField")],t.prototype,"readObjectIdField",null),(0,c._)([(0,w.MZ)({readOnly:!0})],t.prototype,"geometryType",void 0),(0,c._)([(0,w.MZ)({})],t.prototype,"typeIdField",void 0),(0,c._)([(0,w.MZ)({})],t.prototype,"types",void 0),(0,c._)([(0,w.MZ)({readOnly:!0})],t.prototype,"parsedUrl",null),(0,c._)([(0,w.MZ)({type:Function})],t.prototype,"pixelFilter",void 0),(0,c._)([(0,w.MZ)()],t.prototype,"raster",void 0),(0,c._)([(0,w.MZ)({readOnly:!0})],t.prototype,"sourceType",void 0),(0,c._)([(0,D.w)("sourceType",["serviceSourceType","fields"])],t.prototype,"readSourceType",null),(0,c._)([(0,w.MZ)()],t.prototype,"viewId",void 0),(0,c._)([(0,w.MZ)()],t.prototype,"renderer",null),(0,c._)([(0,w.MZ)({types:ey.uy,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:ey.Gj,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],t.prototype,"internalRenderer",null),(0,c._)([(0,D.w)("internalRenderer")],t.prototype,"readRenderer",null),(0,c._)([(0,_.K)("internalRenderer")],t.prototype,"writeRenderer",null),(0,c._)([(0,w.MZ)({clonable:!1})],t.prototype,"symbolizer",void 0),(0,c._)([(0,w.MZ)(Z.ke)],t.prototype,"opacity",void 0),(0,c._)([(0,w.MZ)({readOnly:!0})],t.prototype,"rasterFields",null),(0,c._)([(0,w.MZ)({constructOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),(0,c._)([(0,w.MZ)({type:V.A,json:{name:"renderingRule"}})],t.prototype,"rasterFunction",null),(0,c._)([(0,D.w)("rasterFunction",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRasterFunction",null),(0,c._)([(0,w.MZ)({readOnly:!0})],t.prototype,"serviceDataType",void 0),(0,c._)([(0,w.MZ)({readOnly:!0,type:j.A})],t.prototype,"spatialReference",void 0),(0,c._)([(0,D.w)("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),(0,c._)([(0,w.MZ)({type:ee.e8.apiValues,json:{read:ee.e8.read,type:ee.e8.jsonValues}})],t.prototype,"pixelType",void 0),(0,c._)([(0,_.K)("pixelType")],t.prototype,"writePixelType",null),(0,c._)([(0,w.MZ)({constructOnly:!0,type:el.A})],t.prototype,"serviceRasterInfo",void 0),(0,c._)([(0,w.MZ)()],t.prototype,"sourceJSON",void 0),(0,c._)([(0,w.MZ)(Z.OZ)],t.prototype,"url",void 0),(0,c._)([(0,w.MZ)({readOnly:!0})],t.prototype,"version",void 0),(0,c._)([(0,D.w)("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=(0,c._)([(0,R.$)("esri.layers.mixins.ArcGISImageService")],t)};var iA=i(81877),ix=i(24743),iF=i(60349),iD=i(2043),iN=i(54882),iT=i(1220),ij=i(6255),iP=i(23281),iZ=i(70442),iO=i(63145),iC=i(52438),iV=i(84090);let iJ=class extends(0,ix.dM)((0,iZ.e)((0,iP.j)((0,iD.q)((0,iN.A)((0,iT.H)(iM((0,ij.J)((0,iF.d)((0,iA.b)((0,g.P)(h.A.ClonableMixin(b.A)))))))))))){constructor(...e){super(...e),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=(0,f.sg)(async(e,t,r)=>{let{save:s,saveAs:n}=await i.e(4611).then(i.bind(i,64611));switch(e){case iV.X.SAVE:return s(this,t);case iV.X.SAVE_AS:return n(this,r,t)}})}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){let t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(f.QP).then(()=>this._fetchService(t))),Promise.resolve(this)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(e){this._set("legendEnabled",e)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(e){this._set("listMode",e)}writeOperationalLayerType(e,t,i){let r="vector-field"===this.renderer?.type;t[i]=r?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){return!(!this.raster||!this.url?.toLowerCase().includes("/rasterrendering/imageserver"))}createPopupTemplate(e){let{rasterFields:t}=this,i=new Set,r=eo.F_.itemPixelValue.toLowerCase(),s="raster-dataset"===this.sourceType,n=eo.Oo.toLowerCase(),a=`${eo.F_.servicePixelValue.toLowerCase()}.`;for(let e of t){let t=e.name.toLowerCase();t===r||t.startsWith(a)||s&&t.startsWith(n)||i.add(e.name)}let o=(0,iC.tn)({fields:t,title:this.title},{...e,visibleFieldNames:i}),{rasterInfo:l}=this;return o?.fieldInfos&&l&&(0,eo.h4)(o.fieldInfos,l),o}queryFeatures(e,t){return this.queryRasters(e,t).then(e=>{if(e?.features)for(let t of e.features)t.layer=t.sourceLayer=this;return e})}queryFeatureCount(e,t){return this.queryRasterCount(e,t)}redraw(){this.emit("redraw")}async save(e){return this._debouncedSaveOperations(iV.X.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(iV.X.SAVE_AS,t,e)}serviceSupportsSpatialReference(e){return(0,iO.D)(this,e)}write(e,t){if(!this._isPreviewLayer)return super.write(e,t);if(t?.messages){let e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new y.A("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}};(0,c._)([(0,w.MZ)(Z.fV)],iJ.prototype,"legendEnabled",null),(0,c._)([(0,w.MZ)({type:["show","hide"]})],iJ.prototype,"listMode",null),(0,c._)([(0,w.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],iJ.prototype,"isReference",void 0),(0,c._)([(0,w.MZ)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],iJ.prototype,"operationalLayerType",void 0),(0,c._)([(0,_.K)("web-map","operationalLayerType")],iJ.prototype,"writeOperationalLayerType",null),(0,c._)([(0,w.MZ)(Z.M6)],iJ.prototype,"popupEnabled",void 0),(0,c._)([(0,w.MZ)({type:d.A,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],iJ.prototype,"popupTemplate",void 0),(0,c._)([(0,w.MZ)({readOnly:!0})],iJ.prototype,"defaultPopupTemplate",null),(0,c._)([(0,w.MZ)({readOnly:!0,json:{read:!1}})],iJ.prototype,"type",void 0),(0,c._)([(0,w.MZ)({readOnly:!0})],iJ.prototype,"_isPreviewLayer",null);let iE=iJ=(0,c._)([(0,R.$)("esri.layers.ImageryLayer")],iJ)},8019:(e,t,i)=>{i.d(t,{V:()=>a});var r=i(86277),s=i(79136),n=i(86099);async function a(e,t,i){let a=(0,r.Dl)(e),{data:o}=await (0,s.Pk)(a,n.A.from(t),i);return o.objectIds??[]}},11506:(e,t,i)=>{function r(e,t){return e?t?4:3:t?3:2}function s(e,t,i,s){if(!t?.lengths.length)return null;e.lengths.length&&(e.lengths.length=0),e.coords.length&&(e.coords.length=0);let n=e.coords,a=[],o=i?[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY]:[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY],{lengths:l,coords:u}=t,p=r(i,s),m=0;for(let e of l){let t=function(e,t,i,s,n,a){let o=r(n,a),l=i,u=i+o,p=0,m=0,c=0,d=0,h=0;for(let i=0,r=s-1;i<r;i++,l+=o,u+=o){let i=t[l],r=t[l+1],s=t[l+2],a=t[u],o=t[u+1],y=t[u+2],g=i*o-a*r;d+=g,p+=(i+a)*g,m+=(r+o)*g,n&&(g=i*y-a*s,c+=(s+y)*g,h+=g),i<e[0]&&(e[0]=i),i>e[1]&&(e[1]=i),r<e[2]&&(e[2]=r),r>e[3]&&(e[3]=r),n&&(s<e[4]&&(e[4]=s),s>e[5]&&(e[5]=s))}if(d>0&&(d*=-1),h>0&&(h*=-1),!d)return null;let y=[p,m,.5*d];return n&&(y[3]=c,y[4]=.5*h),y}(o,u,m,e,i,s);t&&a.push(t),m+=e*p}if(a.sort((e,t)=>{let r=e[2]-t[2];return 0===r&&i&&(r=e[4]-t[4]),r}),a.length){let e=6*a[0][2];n[0]=a[0][0]/e,n[1]=a[0][1]/e,i&&(e=6*a[0][4],n[2]=0!==e?a[0][3]/e:0),(n[0]<o[0]||n[0]>o[1]||n[1]<o[2]||n[1]>o[3]||i&&(n[2]<o[4]||n[2]>o[5]))&&(n.length=0)}if(!n.length){let e=t.lengths[0]?function(e,t,i,s,n){let a=r(s,n),o=0,l=t+a,u=0,p=0,m=0,c=0;for(let t=0,r=i-1;t<r;t++,o+=a,l+=a){var d,h,y,g,f;let t=e[o],i=e[o+1],r=e[o+2],n=e[l],a=e[l+1],w=e[l+2],v=s?function(e,t,i,r,s,n){let a=r-e,o=s-t,l=n-i;return Math.sqrt(a*a+o*o+l*l)}(t,i,r,n,a,w):function(e,t,i,r){let s=i-e,n=r-t;return Math.sqrt(s*s+n*n)}(t,i,n,a);if(v)if(u+=v,s){let e=[(d=t)+.5*(n-d),(h=i)+.5*(a-h),(y=r)+.5*(w-y)];p+=v*e[0],m+=v*e[1],c+=v*e[2]}else{let e=[(g=t)+.5*(n-g),(f=i)+.5*(a-f)];p+=v*e[0],m+=v*e[1]}}return u>0?s?[p/u,m/u,c/u]:[p/u,m/u]:i>0?s?[e[t],e[t+1],e[t+2]]:[e[t],e[t+1]]:null}(u,0,l[0],i,s):null;if(!e)return null;n[0]=e[0],n[1]=e[1],i&&e.length>2&&(n[2]=e[2])}return e}i.d(t,{Q:()=>s})},53562:(e,t,i)=>{i.d(t,{I:()=>a});var r=i(86277),s=i(79136),n=i(86099);async function a(e,t,i){let a=(0,r.Dl)(e),{data:o}=await (0,s.gW)(a,n.A.from(t),i);return o.count}},54805:(e,t,i)=>{i.d(t,{A:()=>r});class r{constructor(){this.objectIdFieldName=null,this.globalIdFieldName=null,this.geohashFieldName=null,this.geometryProperties=null,this.geometryType=null,this.spatialReference=null,this.hasZ=!1,this.hasM=!1,this.features=[],this.fields=[],this.transform=null,this.exceededTransferLimit=!1,this.uniqueIdField=null,this.queryGeometryType=null,this.queryGeometry=null}weakClone(){let e=new r;return e.objectIdFieldName=this.objectIdFieldName,e.globalIdFieldName=this.globalIdFieldName,e.geohashFieldName=this.geohashFieldName,e.geometryProperties=this.geometryProperties,e.geometryType=this.geometryType,e.spatialReference=this.spatialReference,e.hasZ=this.hasZ,e.hasM=this.hasM,e.features=this.features,e.fields=this.fields,e.transform=this.transform,e.exceededTransferLimit=this.exceededTransferLimit,e.uniqueIdField=this.uniqueIdField,e.queryGeometry=this.queryGeometry,e.queryGeometryType=this.queryGeometryType,e}}},56599:(e,t,i)=>{i.d(t,{A:()=>s});var r=i(94264);class s{constructor(e=[],t=[]){this.lengths=e??[],this.coords=t??[]}static fromJSON(e){return new s(e.lengths,e.coords)}static fromRect(e){let[t,i,r,n]=e,a=r-t,o=n-i;return new s([5],[t,i,a,0,0,o,-a,0,0,-o])}get isPoint(){return 0===this.lengths.length&&this.coords.length>=2}get maxLength(){return Math.max(...this.lengths)}get size(){return this.lengths.reduce((e,t)=>e+t)}get usedMemory(){return 64+(0,r.Qf)(this.lengths,this.coords)}area(){let e=0,t=0;if(!this.lengths.length)return 0;for(let i=0;i<this.lengths.length;i++){let r=this.lengths[i];if(r<3)continue;let s=this.coords[2*t],n=this.coords[2*t+1];for(let i=1;i<r;i+=1){let r=this.coords[2*(i+t)],a=this.coords[2*(i+t)+1];e+=-.5*(r-s)*(a+n),s=r,n=a}t+=r}return e}forEachVertex(e){let t=0;this.lengths.length||e(this.coords[0],this.coords[1]);for(let i=0;i<this.lengths.length;i++){let r=this.lengths[i];for(let i=0;i<r;i++)e(this.coords[2*(i+t)],this.coords[2*(i+t)+1]);t+=r}}deltaDecode(){let e=this.clone(),{coords:t,lengths:i}=e,r=0;for(let e of i){for(let i=1;i<e;i++)t[2*(r+i)]+=t[2*(r+i)-2],t[2*(r+i)+1]+=t[2*(r+i)-1];r+=e}return e}clone(e){if(0===this.lengths.length)return new s([],[this.coords[0],this.coords[1]]);let t=(0===this.lengths.length?1:this.lengths.reduce((e,t)=>e+t))*2,i=this.coords.slice(0,t);return e?(e.set(i),new s(this.lengths,e)):new s(Array.from(this.lengths),Array.from(i))}}},71270:(e,t,i)=>{i.d(t,{E9:()=>h,Tw:()=>c,X6:()=>d});var r=i(39166),s=i(61414),n=i(39960),a=i(91463),o=i(65018),l=i(8946),u=i(86277),p=i(49570);async function m(e,t,i){let m=(0,u.Dl)(e),{rasterFunction:c,sourceJSON:d}=t||{},h=c?JSON.stringify(c.rasterFunctionDefinition||c):null,y=(0,u.lF)({...m.query,renderingRule:h,f:"json"}),g=(0,u.jV)(y,i);e=m.path;let f=d||await (0,r.A)(e,g).then(e=>e.data),w=f.hasRasterAttributeTable?(0,r.A)(`${e}/rasterAttributeTable`,g):null,v=f.hasColormap?(0,r.A)(`${e}/colormap`,g):null,R=f.hasHistograms?(0,r.A)(`${e}/histograms`,g):null,_=f.currentVersion>=10.3?(0,r.A)(`${e}/keyProperties`,g):null,b=f.hasMultidimensions?(0,r.A)(`${e}/multidimensionalInfo`,g):null,S=await Promise.allSettled([w,v,R,_,b]),I=null;if(f.minValues&&f.minValues.length===f.bandCount){I=[];for(let e=0;e<f.minValues.length;e++)I.push({min:f.minValues[e],max:f.maxValues[e],avg:f.meanValues[e],stddev:f.stdvValues[e]})}let M=s.A.fromJSON(f.extent),A=Math.ceil(M.width/f.pixelSizeX-.1),x=Math.ceil(M.height/f.pixelSizeY-.1),F=a.A.fromJSON(f.spatialReference||f.extent.spatialReference),D="fulfilled"===S[0].status?S[0].value?.data:null,N=D?.features?.length?p.A.fromJSON(D):null,T="fulfilled"===S[1].status?S[1].value?.data.colormap:null,j=T?.length?T:null,P="fulfilled"===S[2].status?S[2].value?.data.histograms:null,Z=P?.[0]?.counts?.length?P:null,O="fulfilled"===S[3].status?S[3].value?.data??{}:{},C="fulfilled"===S[4].status?S[4].value?.data.multidimensionalInfo:null,V=C?.variables?.length?C:null;V&&V.variables.forEach(e=>{e.statistics?.length&&e.statistics.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),e.dimensions?.forEach(e=>{"StdTime"!==e.name||e.recurring||e.unit||(e.unit="ISO8601")})});let{defaultVariable:J,serviceDataType:E}=f;J&&J!==O.DefaultVariable&&(O.DefaultVariable=J),E?.includes("esriImageServiceDataTypeVector")&&!E.includes(O.DataType)&&(O.DataType=E.replace("esriImageServiceDataType",""));let q=f.noDataValue;f.noDataValues?.length&&f.noDataValues.some(e=>e!==q)&&(q=f.noDataValues);let G=f.transposeInfo?new l.A({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new n.A({x:f.extent.xmin,y:f.extent.ymax,spatialReference:F}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(A,x))/Math.LN2-8)),transposeInfo:f.transposeInfo}):void 0;return new o.A({width:A,height:x,bandCount:f.bandCount,extent:s.A.fromJSON(f.extent),spatialReference:F,pixelSize:new n.A({x:f.pixelSizeX,y:f.pixelSizeY,spatialReference:F}),pixelType:f.pixelType.toLowerCase(),statistics:I,attributeTable:N,colormap:j,histograms:Z,keyProperties:O,noDataValue:q,multidimensionalInfo:V,storageInfo:G})}function c(e,t,i){return m(e,{sourceJSON:t},i)}function d(e,t,i){return m(e,{rasterFunction:t},i)}function h(e,t){e.attributeTable||(t.hasRasterAttributeTable=!1),e.histograms||(t.hasHistograms=!1),e.colormap||(t.hasColormap=!1),e.multidimensionalInfo||(t.hasMultidimensions=!1)}},72875:(e,t,i)=>{i.d(t,{C:()=>a,m:()=>n});var r=i(32391),s=i(92753);async function n(e,t,i){let n;try{n=await createImageBitmap(e)}catch(e){throw new r.A("request:server",`Unable to load ${t}`,{url:t,error:e})}return(0,s.Te)(i),n}async function a(e,t,i,n,a){let o;try{o=await createImageBitmap(e)}catch(e){throw new r.A("request:server",`Unable to load tile ${t}/${i}/${n}`,{error:e,level:t,row:i,col:n})}return(0,s.Te)(a),o}},82795:(e,t,i)=>{i.d(t,{N3:()=>o,Om:()=>a});var r=i(94264),s=i(11506),n=i(56599);class a{constructor(e=null,t={},i,r,s=0){this.geometry=e,this.attributes=t,this.centroid=i,this.objectId=r,this.displayId=s}static fromJSON(e){let t=e.geometry?n.A.fromJSON(e.geometry):null,i=e.centroid?n.A.fromJSON(e.centroid):null,r=e.objectId;return new a(t,e.attributes,i,r)}weakClone(){let e=new a(this.geometry,this.attributes,this.centroid,this.objectId);return e.displayId=this.displayId,e}clone(){let e=new a(this.geometry?.clone(),{...this.attributes},this.centroid?.clone(),this.objectId);return e.displayId=this.displayId,e}ensureCentroid(e){return this.centroid??=(0,s.Q)(new n.A,this.geometry,e.hasZ,e.hasM),this.centroid}get usedMemory(){return 128+(0,r.lM)(this.attributes)+(this.geometry?.usedMemory??0)}}function o(e){return!!e.geometry?.coords?.length}},94264:(e,t,i)=>{i.d(t,{Qf:()=>l,Qh:()=>a,RS:()=>s,ez:()=>p,i5:()=>m,lM:()=>n,qK:()=>u});var r=i(48678);let s=16;function n(e){if(!e)return 0;let t=u;for(let i in e)e.hasOwnProperty(i)&&(t+=o(e[i],!1));return t}function a(e){if(!e)return 0;if("number"==typeof e[0])return l(e);if(Array.isArray(e)){var t=e;let i=t.length;if(0===i||"number"==typeof t[0])return function(e,t){return p+e.length*t}(t,8);let r=p;for(let e=0;e<i;e++)r+=o(t[e]);return r}let i=u;for(let t in e)e.hasOwnProperty(t)&&(i+=o(e[t]));return i}function o(e,t=!0){switch(typeof e){case"object":return t?a(e):u;case"string":return 32+e.length;case"number":return s;case"boolean":return 4;default:return 8}}function l(...e){return e.reduce((e,t)=>{var i,n;return e+(t?(0,r.iu)(t)?t.byteLength+m:Array.isArray(t)?(i=t,n=s,p+i.length*n):0:0)},0)}let u=32,p=16,m=145}}]);